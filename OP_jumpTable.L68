00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 6/1/2016 8:12:35 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Op Codes
00000000                             3  * Written by : Kristen Attebery
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  VERIFY_OPCODE
00000000  3200                       8      MOVE.W  D0,D1   *Copy instruction for modification
00000002                             9      
00000002                            10      **ISOLATE FIRST FOUR BITS**                                             
00000002  E849                      11      LSR.W   #4,D1       *Shift left four bits
00000004  E049                      12      LSR.W   #8,D1       *Shift left again (12 shifts total)
00000006                            13      
00000006  4242                      14      CLR     D2
00000008  1401                      15      MOVE.B  D1,D2
0000000A                            16      
0000000A  41F9 0000001A             17      LEA     OP_JTAB,A0 
00000010  C5FC 0006                 18      MULS    #6, D2
00000014  4EB0 2000                 19      JSR     0(A0,D2)
00000018  4E75                      20      RTS
0000001A                            21  
0000001A                            22  **************************************************************************
0000001A                            23  *               CMP table 1. Determine OP code.                         *
0000001A                            24  *        Analyzes the first four bits within the instruction             *
0000001A                            25  *        and jumps to the corresponding subroutine.                      *
0000001A                            26  **************************************************************************
0000001A                            27  
0000001A  4EF9 00000082             28  OP_JTAB    JMP     OP0000      *ADDI
00000020  4EF9 0000008E             29      JMP     OP0001      *MOVE.B
00000026  4EF9 0000009A             30      JMP     OP0010      *MOVE.W, MOVEA(WORD)
0000002C  4EF9 0000009E             31      JMP     OP0011      *MOVE.L, MOVEA(LONG) 
00000032  4EF9 000000CE             32      JMP     OP0100      *NOP, MOVEM, LEA, CLR, JSR, RTS
00000038  4EF9 0000015E             33      JMP     OP0101      *ADDQ
0000003E  4EF9 0000016A             34      JMP     OP0110      *Bcc
00000044  4EF9 00000176             35      JMP     OP0111      *MOVEQ
0000004A  4EF9 00000182             36      JMP     OP1000      *DIVU, OR
00000050  4EF9 000001B2             37      JMP     OP1001      *SUB
Line 38 ERROR: Undefined symbol
00000056  4EF9 004DBB8E             38      JMP     INVALID_OPCODE
0000005C  4EF9 000001BE             39      JMP     OP1011      *CMP
00000062  4EF9 000001CA             40      JMP     OP1100      *MULS, AND
00000068  4EF9 000001FA             41      JMP     OP1101      *ADD, ADDA
0000006E  4EF9 0000022A             42      JMP     OP1110      *LSR, LSL, ASR, ASL, ROL, ROR
Line 43 ERROR: Undefined symbol
00000074  4EF9 004DBB8E             43      JMP     INVALID_OPCODE
0000007A                            44  
0000007A                            45  *    CMP     #%0000,D1   *ADDI 
0000007A                            46  *    BEQ     OP0000
0000007A                            47  *    CMP     #%0001,D1   *MOVE.B
0000007A                            48  *    BEQ     OP0001
0000007A                            49  *    CMP     #%0010,D1   *MOVE.W, MOVEA(WORD)
0000007A                            50  *    BEQ     OP0010 
0000007A                            51  *    CMP     #%0011,D1   *MOVE.L, MOVEA(LONG)  
0000007A                            52  *    BEQ     OP0011   
0000007A                            53  *    CMP     #%0100,D1   *NOP, MOVEM, LEA, CLR, JSR, RTS
0000007A                            54  *    BEQ     OP0100
0000007A                            55  *    CMP     #%0101,D1   *ADDQ
0000007A                            56  *    BEQ     OP0101    
0000007A                            57  *    CMP     #%0110,D1   *Bcc
0000007A                            58  *    BEQ     OP0110   
0000007A                            59  *    CMP     #%1000,D1   *MOVEQ
0000007A                            60  *    BEQ     OP1000    
0000007A                            61  *    CMP     #%1001,D1   *DIVU, OR
0000007A                            62  *    BEQ     OP1000    
0000007A                            63  *    CMP     #%1010,D1   *SUB
0000007A                            64  *    BEQ     OP1000    
0000007A                            65  *    CMP     #%1011,D1   *CMP
0000007A                            66  *    BEQ     OP1000    
0000007A                            67  *    CMP     #%1100,D1   *MULS, AND 
0000007A                            68  *    BEQ     OP1000   
0000007A                            69  *    CMP     #%1101,D1   *ADD, ADDA
0000007A                            70  *    BEQ     OP1000   
0000007A                            71  *    CMP     #%1110,D1   *LSR, LSL, ASR, ASL, ROL, ROR  
0000007A                            72  *    BEQ     OP1000
0000007A                            73  
0000007A                            74      
Line 75 ERROR: Undefined symbol
0000007A  4EF9 004DBB8E             75      JMP    INVALID_OPCODE     *Subroutine to store as non-decodable
00000080  4E75                      76      RTS
00000082                            77  
00000082                            78  **************************************************************************
00000082                            79  *        OP0000 - Subroutine for operations beginning with 0000          *
00000082                            80  *        ADDI                                                            *
00000082                            81  **************************************************************************
00000082                            82  OP0000
00000082                            83      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
00000082                            84      *BEGIN OUTPUT
00000082                            85      
00000082  36F9 000002F0             86      MOVE.W  ADDI,(A3)+      *Load 'ADDI' to Add Reg 1 and then increment
Line 87 ERROR: Undefined symbol
00000088  4EF9 004DBB8E             87      JMP     EA_ADDI         *Branch to EA analysis of the command
0000008E                            88  
0000008E                            89  **************************************************************************
0000008E                            90  *        OP0001 - Subroutine for operations beginning with 0001          *
0000008E                            91  *        MOVE.B                                                          *
0000008E                            92  **************************************************************************
0000008E                            93  OP0001  *SINGLE CODE, DO NOT NEED FURTHER CHECKING 
0000008E                            94          *BEGIN OUTPUT
0000008E                            95      
0000008E  36F9 000002F5             96      MOVE.W  MOVE,(A3)+     *Load 'MOVE.B' to Add Reg 1 and then increment
Line 97 ERROR: Undefined symbol
00000094  4EF9 004DBB8E             97      JMP     EA_MOVE        *Branch to EA analysis of the command
0000009A                            98  
0000009A                            99  **************************************************************************
0000009A                           100  *        OP0010 - Subroutine for operations beginning with 0010          *
0000009A                           101  *        MOVE.W, MOVEA(WORD)                                             *
0000009A                           102  **************************************************************************
0000009A                           103  OP0010
0000009A                           104      *Identical to OP0011 for these purposes, branch there
0000009A  6000 0002                105      BRA OP0011
0000009E                           106  
0000009E                           107  **************************************************************************
0000009E                           108  *        OP0011 - Subroutine for operations beginning with 0011          *
0000009E                           109  *        MOVE.L, MOVEA(LONG)                                             *
0000009E                           110  **************************************************************************
0000009E                           111  OP0011
0000009E                           112      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS
0000009E                           113  
0000009E                           114      **ISOLATE NEXT BITS TO CHECK**
0000009E  3200                     115      MOVE.W  D0,D1           *Copy instruction for modification
000000A0  EF49                     116      LSL.W   #7,D1           *Shift left 7 bits 
000000A2  EA49                     117      LSR.W   #5,D1           *Rotate right 5 bits
000000A4  E049                     118      LSR.W   #8,D1           *Shift right again (13 shifts total)
000000A6  0241 000F                119      ANDI.W  #$00F,D1        *Keep 3 bits
000000AA                           120      
000000AA  B27C 0001                121      CMP     #%001,D1      *Check for 0010 to eliminate CLR
000000AE  6700 0012                122      BEQ     _MOVEA          *If equal, branch to CLR
000000B2                           123      
000000B2  6000 0002                124      BRA     _MOVE
000000B6                           125      
000000B6                           126  ********* MOVEL *************        
000000B6                           127  _MOVE
000000B6  36F9 000002F5            128      MOVE.W  MOVE,(A3)+     *Load 'MOVE.L' to Add Reg 1 and then increment   
Line 129 ERROR: Undefined symbol
000000BC  4EF9 004DBB8E            129      JMP     EA_MOVE        *Branch to EA analysis of the command
000000C2                           130  
000000C2                           131  ********* MOVEAL *************        
000000C2                           132  _MOVEA
000000C2  36F9 000002FA            133      MOVE.W  MOVEA,(A3)+    *Load 'MOVEA.L' to Add Reg 1 and then increment
Line 134 ERROR: Undefined symbol
000000C8  4EF9 004DBB8E            134      JMP     EA_MOVEA       *Branch to EA analysis of the command
000000CE                           135  
000000CE                           136  **************************************************************************
000000CE                           137  *        OP0100 - Subroutine for operations beginning with 0100          *
000000CE                           138  *        NOP, MOVEM, LEA, CLR, JSR, RTS                                  *
000000CE                           139  **************************************************************************
000000CE                           140  OP0100
000000CE                           141      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS
000000CE  3200                     142       MOVE.W  D0,D1           *Copy instruction for modification
000000D0                           143      
000000D0  B27C 4E71                144      CMP     #%0100111001110001,D1   *Check to eliminate NOP
000000D4  6700 0064                145      BEQ     _NOP
000000D8  B27C 4E75                146      CMP     #%0100111001110101,D1   *Check to eliminate RTS
000000DC  6700 0068                147      BEQ     _RTS
000000E0                           148      
000000E0  EC49                     149      LSR.W   #6,D1                   *Shift right 6 bits
000000E2  B27C 013A                150      CMP     #%0000000100111010,D1   *Check to eliminate RTS
000000E6  6700 0046                151      BEQ     _JSR
000000EA                           152      
000000EA                           153      **ISOLATE 4 BITS TO CHECK CLR**    
000000EA  3200                     154      MOVE.W  D0,D1           *Copy instruction for modification
000000EC  E949                     155      LSL.W   #4,D1           *Shift left 7 bits 
000000EE  E849                     156      LSR.W   #4,D1           *Rotate right 5 bits
000000F0  E049                     157      LSR.W   #8,D1           *Shift right again (13 shifts total)
000000F2  0241 000F                158      ANDI.W  #$000F,D1       *Keep 4 bits
000000F6                           159      
000000F6  B27C 0002                160      CMP     #%0010,D1       *Check for 0010 to eliminate CLR
000000FA  6700 001A                161      BEQ     _CLR            *If equal, branch to CLR
000000FE                           162  
000000FE                           163      **ISOLATE 3 BITS TO CHECK MOVEM**
000000FE  3200                     164      MOVE.W  D0,D1           *Copy instruction for modification
00000100  ED49                     165      LSL.W   #6,D1           *Shift left 6 bits 
00000102  EA49                     166      LSR.W   #5,D1           *Shift right 5 bits
00000104  E049                     167      LSR.W   #8,D1           *Shift right again (13 shifts total)
00000106  0241 000F                168      ANDI.W  #$00F,D1        *Keep 3 bits
0000010A                           169      
0000010A  B27C 0001                170      CMP     #%001,D1
0000010E  6700 0042                171      BEQ     _MOVEM
00000112                           172      
00000112  6000 000E                173      BRA     _LEA            *Else by process of elimination it must be LEA   
00000116                           174      
00000116                           175  ********* CLR *************        
00000116                           176  _CLR
00000116  36F9 00000300            177      MOVE.W  OPCLR,(A3)+     *Load 'CLR' to Add Reg 1 and then increment
Line 178 ERROR: Undefined symbol
0000011C  4EF9 004DBB8E            178      JMP     EA_CLR          *Branch to EA analysis of the command
00000122                           179  
00000122                           180  ********* LEA *************        
00000122                           181  _LEA
00000122  36F9 00000304            182      MOVE.W  OPLEA,(A3)+     *Load 'LEA' to Add Reg 1 and then increment
Line 183 ERROR: Undefined symbol
00000128  4EF9 004DBB8E            183      JMP     EA_LEA          *Branch to EA analysis of the command
0000012E                           184  
0000012E                           185  ********* JSR *************     
0000012E                           186  _JSR
0000012E  36F9 00000308            187      MOVE.W  OPJSR,(A3)+     *Load 'JSR' to Add Reg 1 and then increment
Line 188 ERROR: Undefined symbol
00000134  4EF9 004DBB8E            188      JMP    EA_JSR          *Branch to EA analysis of the command
0000013A                           189  
0000013A                           190  ********* NOP *************     
0000013A                           191  _NOP
0000013A  36F9 0000030C            192      MOVE.W  OPNOP,(A3)+     *Load 'NOP' to Add Reg 1 and then increment
Line 193 ERROR: Undefined symbol
00000140  4EF9 004DBB8E            193      JMP    VALID_OPCODE          *Branch to EA analysis of the command      
00000146                           194  
00000146                           195  ********* RTS *************     
00000146                           196  _RTS
00000146  36F9 00000310            197      MOVE.W  OPRTS,(A3)+     *Load 'RTS' to Add Reg 1 and then increment
Line 198 ERROR: Undefined symbol
0000014C  4EF9 004DBB8E            198      JMP    VALID_OPCODE          *Branch to EA analysis of the command      
00000152                           199  
00000152                           200  ********* MOVEM *************     
00000152                           201  _MOVEM
00000152  36F9 00000314            202      MOVE.W  MOVEM,(A3)+     *Load 'MOVEM' to Add Reg 1 and then increment
Line 203 ERROR: Undefined symbol
00000158  4EF9 004DBB8E            203      JMP    EA_MOVEM        *Branch to EA analysis of the command
0000015E                           204      
0000015E                           205  **************************************************************************
0000015E                           206  *        OP0101 - Subroutine for operations beginning with 0101          *
0000015E                           207  *        ADDQ                                                            *
0000015E                           208  **************************************************************************
0000015E                           209  OP0101
0000015E                           210      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
0000015E                           211      *BEGIN OUTPUT
0000015E                           212      
0000015E  36F9 0000031A            213      MOVE.W  ADDQ,(A3)+      *Load 'AddQ' to Add Reg 1 and then increment
Line 214 ERROR: Undefined symbol
00000164  4EF9 004DBB8E            214      JMP    EA_ADDQ         *Branch to EA analysis of the command
0000016A                           215      
0000016A                           216  **************************************************************************
0000016A                           217  *        OP0110 - Subroutine for operations beginning with 0110          *
0000016A                           218  *        Bcc                                                             *
0000016A                           219  **************************************************************************
0000016A                           220  OP0110
0000016A                           221      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
0000016A                           222      *BEGIN OUTPUT
0000016A                           223      
0000016A  36F9 0000031F            224      MOVE.W  Bcc,(A3)+       *Load 'Bcc' to Add Reg 1 and then increment 
Line 225 ERROR: Undefined symbol
00000170  4EF9 004DBB8E            225      JMP    EA_BCC          *Branch to EA analysis of the command
00000176                           226  
00000176                           227  **************************************************************************
00000176                           228  *        OP0111 - Subroutine for operations beginning with 0101          *
00000176                           229  *        MOVEQ                                                           *
00000176                           230  **************************************************************************
00000176                           231  OP0111
00000176                           232      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
00000176                           233      *BEGIN OUTPUT
00000176                           234      
00000176  36F9 00000321            235      MOVE.W  MOVEQ,(A3)+     *Load 'MOVEQ' to Add Reg 1 and then increment
Line 236 ERROR: Undefined symbol
0000017C  4EF9 004DBB8E            236      JMP    EA_MOVEQ        *Branch to EA analysis of the command
00000182                           237      
00000182                           238  **************************************************************************
00000182                           239  *        OP1000 - Subroutine for operations beginning with 1000          *
00000182                           240  *        DIVU, OR                                                        *
00000182                           241  **************************************************************************
00000182                           242  OP1000
00000182                           243      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS
00000182                           244      
00000182                           245      **ISOLATE NEXT BITS TO CHECK**
00000182  3200                     246      MOVE.W  D0,D1           *Copy instruction for modification
00000184  EF49                     247      LSL.W   #7,D1           *Shift left 7 bits 
00000186  EA49                     248      LSR.W   #5,D1           *Rotate right 5 bits
00000188  E049                     249      LSR.W   #8,D1           *Shift right again (13 shifts total)
0000018A  0241 000F                250      ANDI.W  #$00F,D1        *Keep 3 bits
0000018E                           251            
0000018E  B27C 0003                252      CMP     #%011,D1    *Check for 011 to eliminate DIVU
00000192  6700 0006                253      BEQ     _DIVU        *If equal, branch to DIVU
00000196  6000 000E                254      BRA     _OR          *Else must be OR, branch
0000019A                           255      
0000019A                           256  ********* DIVU *************        
0000019A                           257  _DIVU
0000019A  36F9 00000327            258      MOVE.W  DIVU,(A3)+      *Load 'DIVU' to Add Reg 1 and then increment
Line 259 ERROR: Undefined symbol
000001A0  4EF9 004DBB8E            259      JMP    EA_MULS         *Branch to EA analysis of the command
000001A6                           260  
000001A6                           261  ********* OR *************        
000001A6                           262  _OR
000001A6  36F9 0000032C            263      MOVE.W  OR,(A3)+        *Load 'OR' to Add Reg 1 and then increment
Line 264 ERROR: Undefined symbol
000001AC  4EF9 004DBB8E            264      JMP    EA_ADD           *Branch to EA analysis of the command
000001B2                           265  
000001B2                           266  **************************************************************************
000001B2                           267  *        OP1001 - Subroutine for operations beginning with 1001          *
000001B2                           268  *        SUB                                                             *
000001B2                           269  **************************************************************************
000001B2                           270  OP1001
000001B2                           271      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
000001B2                           272      *BEGIN OUTPUT
000001B2                           273      
000001B2  36F9 0000032F            274      MOVE.W  OPSUB,(A3)+     *Load 'SUB' to Add Reg 1 and then increment
Line 275 ERROR: Undefined symbol
000001B8  4EF9 004DBB8E            275      JMP    EA_ADD          *Branch to EA analysis of the command
000001BE                           276  
000001BE                           277  **************************************************************************
000001BE                           278  *        OP1011 - Subroutine for operations beginning with 1011          *
000001BE                           279  *        CMP                                                             *
000001BE                           280  **************************************************************************
000001BE                           281  OP1011
000001BE                           282      *SINGLE CODE, DO NOT NEED FURTHER CHECKING
000001BE                           283      *BEGIN OUTPUT
000001BE  36F9 00000333            284      MOVE.W  CMP,(A3)+     *Load 'CMP' to Add Reg 1 and then increment
Line 285 ERROR: Undefined symbol
000001C4  4EF9 004DBB8E            285      JMP    EA_CMP          *Branch to EA analysis of the command
000001CA                           286  
000001CA                           287  **************************************************************************
000001CA                           288  *        OP1100 - Subroutine for operations beginning with 1100          *
000001CA                           289  *        MULS, AND                                                       *
000001CA                           290  **************************************************************************
000001CA                           291  OP1100
000001CA                           292      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS
000001CA                           293  
000001CA  3200                     294      MOVE.W  D0,D1           *Copy instruction for modification
000001CC  EF49                     295      LSL.W   #7,D1           *Shift left 7 bits 
000001CE  EA49                     296      LSR.W   #5,D1           *Rotate right 5 bits
000001D0  E049                     297      LSR.W   #8,D1           *Shift right again (13 shifts total)
000001D2  0241 000F                298      ANDI.W  #$00F,D1        *Keep 3 bits
000001D6                           299           
000001D6  B27C 0007                300      CMP     #%111,D1       *Check for 111 to eliminate MULS
000001DA  6700 0006                301      BEQ     _MULS           *If equal, branch to MULS
000001DE  6000 000E                302      BRA     _AND            *Else must be AND, branch
000001E2                           303      
000001E2                           304  ********* MULS *************        
000001E2                           305  _MULS
000001E2  36F9 00000337            306      MOVE.W  MULS,(A3)+      *Load 'MULS' to Add Reg 1 and then increment
Line 307 ERROR: Undefined symbol
000001E8  4EF9 004DBB8E            307      JMP    EA_MULS         *Branch to EA analysis of the command
000001EE                           308  
000001EE                           309  ********* AND *************        
000001EE                           310  _AND
000001EE  36F9 0000033C            311      MOVE.W  AND,(A3)+       *Load 'AND' to Add Reg 1 and then increment
Line 312 ERROR: Undefined symbol
000001F4  4EF9 004DBB8E            312      JMP    EA_ADD          *Branch to EA analysis of the command
000001FA                           313      
000001FA                           314  **************************************************************************
000001FA                           315  *        OP1101 - Subroutine for operations beginning with 1101          *
000001FA                           316  *        ADD, ADDA                                                       *
000001FA                           317  **************************************************************************
000001FA                           318  OP1101
000001FA                           319      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS  
000001FA                           320  
000001FA  3200                     321      MOVE.W  D0,D1           *Copy instruction for modification
000001FC  E149                     322      LSL.W   #8,D1           *Shift left 7 bits 
000001FE  EA49                     323      LSR.W   #5,D1           *Rotate left 5 bits
00000200  E049                     324      LSR.W   #8,D1           *Shift left again (13 shifts total)
00000202  0241 000F                325      ANDI.W  #$0F,D1         *Keep 3 bits
00000206                           326                
00000206  B27C 0003                327      CMP     #%11,D1         *Check for 011 to eliminate ADDA (Size dependant)
0000020A  6700 0012                328      BEQ     _ADDA           *If equal, branch to ADDA
0000020E  6000 0002                329      BRA     _ADD            *Else must be ADD, branch
00000212                           330      
00000212                           331  ********* ADD *************        
00000212                           332  _ADD
00000212  36F9 00000340            333      MOVE.W  ADD,(A3)+       *Load 'ADD' to Add Reg 1 and then increment
Line 334 ERROR: Undefined symbol
00000218  4EF9 004DBB8E            334      JMP    EA_ADD          *Branch to EA analysis of the command
0000021E                           335  
0000021E                           336  ********* AND *************        
0000021E                           337  _ADDA
0000021E  36F9 00000344            338      MOVE.W  ADDA,(A3)+      *Load 'ADDA' to Add Reg 1 and then increment
Line 339 ERROR: Undefined symbol
00000224  4EF9 004DBB8E            339      JMP    EA_ADDA         *Branch to EA analysis of the command
0000022A                           340      
0000022A                           341  **************************************************************************
0000022A                           342  *        OP1110 - Subroutine for operations beginning with 1110          *
0000022A                           343  *        LSR, LSL, ASR, ASL, ROL, ROR                                    *****************************************************************************
0000022A                           344  **************************************************************************
0000022A                           345  OP1110
0000022A                           346      *MULTIPLE CODE, CHECK AND GET NEXT 3 BITS
0000022A                           347        
0000022A  3200                     348      MOVE.W  D0,D1           *Copy instruction for modification
0000022C  EF49                     349      LSL.W   #7,D1           *Shift left 7 bits 
0000022E  EA49                     350      LSR.W   #5,D1           *Rotate right 5 bits
00000230  E049                     351      LSR.W   #8,D1           *Shift right again (13 shifts total)
00000232  0241 000F                352      ANDI.W  #$00F,D1        *Keep 3 bits
00000236                           353                    
00000236  B27C 0001                354      CMP     #%001,D1        *Check for 001 to eliminate LSd instructions
0000023A  6700 001C                355      BEQ     _LSd            *If equal, branch to LSd to determine LSR or LSL
0000023E                           356  
0000023E                           357      **ELSE CONTINUE CHECKING**
0000023E  3200                     358      MOVE.W  D0,D1           *Copy instruction for modification
00000240  E149                     359      LSL.W   #8,D1          *Shift left 7 bits
00000242  E749                     360      LSL.W   #3,D1 
00000244  EA49                     361      LSR.W   #5,D1           *Rotate left 5 bits
00000246  E049                     362      LSR.W   #8,D1           *Shift left again (13 shifts total)
00000248  0241 000F                363      ANDI.W  #$0F,D1         *Keep 2 bits
0000024C                           364      
0000024C                           365      **BEGIN ELIMINATION 'IF/ELSE' STATEMENTS                   
0000024C  B27C 0000                366      CMP     #%00,D1         *Check for 00 to eliminate ASd
00000250  6700 0036                367      BEQ     _ASd            *If equal, branch to ASd to determine ASR or ASL
00000254  6000 0064                368      BRA     _ROd            *Else must be a ROd instruction, branch to determine
00000258                           369      
00000258                           370  ********** LSd *************        
00000258                           371  _LSd   
00000258                           372   
00000258  3200                     373      MOVE.W  D0,D1           *Copy instruction for modification
0000025A  EF49                     374      LSL.W   #7,D1           *Shift left 7 bits 
0000025C  EE49                     375      LSR.W   #7,D1           *Rotate right 5 bits
0000025E  E049                     376      LSR.W   #8,D1           *Shift right again (13 shifts total)
00000260  0241 000F                377      ANDI.W  #$F,D1          *Keep 3 bits
00000264                           378  
00000264  B27C 0000                379      CMP     #%0,D1        *Check for 011 to eliminate LSR
00000268  6700 0012                380      BEQ     _LSR            *If equal, branch to LSR
0000026C  6000 0002                381      BRA     _LSL            *Else must be LSL, branch
00000270                           382  
00000270                           383  _LSL    
00000270  36F9 00000349            384      MOVE.W  LSL,(A3)+       *Load 'LSL' to Add Reg 1 and then increment
Line 385 ERROR: Undefined symbol
00000276  4EF9 004DBB8E            385      JMP    EA_LSD         *Branch to EA analysis of the command
0000027C                           386  
0000027C                           387  _LSR
0000027C  36F9 0000034D            388      MOVE.W  LSR,(A3)+       *Load 'LSR' to Add Reg 1 and then increment
Line 389 ERROR: Undefined symbol
00000282  4EF9 004DBB8E            389      JMP    EA_LSD          *Branch to EA analysis of the command
00000288                           390  
00000288                           391  ********* ASd *************
00000288                           392  _ASd
00000288                           393  
00000288  3200                     394      MOVE.W  D0,D1           *Copy instruction for modification
0000028A  E149                     395      LSL.W   #8,D1           *Shift left 7 bits 
0000028C  E549                     396      LSL.W   #2,D1           *Shift left 7 bits
0000028E  EA49                     397      LSR.W   #5,D1           *Rotate right 5 bits
00000290  E049                     398      LSR.W   #8,D1           *Shift right again (13 shifts total)
00000292  0241 000F                399      ANDI.W  #$00F,D1        *Keep 3 bits
00000296                           400     
00000296  B27C 0000                401      CMP     #%000,D1        *Check for 000 to eliminate ASR
0000029A  6700 0012                402      BEQ     _ASR            *If equal, branch to ASR
0000029E  6000 0002                403      BRA     _ASL            *Else must be ASL, branch
000002A2                           404  
000002A2                           405  _ASL    
000002A2  36F9 00000351            406      MOVE.W  ASL,(A3)+       *Load 'ASL' to Add Reg 1 and then increment
Line 407 ERROR: Undefined symbol
000002A8  4EF9 004DBB8E            407      JMP    EA_LSD          *Branch to EA analysis of the command
000002AE                           408  
000002AE                           409  _ASR
000002AE  36F9 00000355            410      MOVE.W  ASR,(A3)+       *Load 'ASR' to Add Reg 1 and then increment
Line 411 ERROR: Undefined symbol
000002B4  4EF9 004DBB8E            411      JMP    EA_LSD          *Branch to EA analysis of the command
000002BA                           412  
000002BA                           413  ********* ROd *************
000002BA                           414  _ROd
000002BA                           415  
000002BA  3200                     416      MOVE.W  D0,D1           *Copy instruction for modification
000002BC  E549                     417      LSL.W   #2,D1           *Shift left 7 bits
000002BE  E149                     418      LSL.W   #8,D1           *Shift left 7 bits 
000002C0  EA49                     419      LSR.W   #5,D1           *Rotate right 5 bits
000002C2  E049                     420      LSR.W   #8,D1           *Shift right again (13 shifts total)
000002C4  0241 000F                421      ANDI.W  #$00F,D1        *Keep 3 bits
000002C8                           422  
000002C8                           423      **BEGIN ELIMINATION 'IF/ELSE' STATEMENTS   
000002C8  B27C 0003                424      CMP     #%011,D1        *Check for 011 to eliminate ROR
000002CC  6700 0012                425      BEQ     _ROR            *If equal, branch to ROR
000002D0  6000 0002                426      BRA     _ROL            *Else must be ROL, branch
000002D4                           427      
000002D4                           428  _ROL    
000002D4  36F9 00000359            429      MOVE.W  ROL,(A3)+       *Load 'ROL' to Add Reg 1 and then increment
Line 430 ERROR: Undefined symbol
000002DA  4EF9 004DBB8E            430      JMP    EA_LSD          *Branch to EA analysis of the command
000002E0                           431  
000002E0                           432  _ROR
000002E0  36F9 0000035D            433      MOVE.W  ROR,(A3)+       *Load 'ROR' to Add Reg 1 and then increment
Line 434 ERROR: Undefined symbol
000002E6  4EF9 004DBB8E            434      JMP    EA_LSD          *Branch to EA analysis of the command
000002EC                           435  
000002EC  FFFF FFFF                436      SIMHALT
000002F0                           437  
000002F0= 41 44 44 49 00           438  ADDI    DC.B    'ADDI',0
000002F5= 4D 4F 56 45 00           439  MOVE    DC.B    'MOVE',0
000002FA= 4D 4F 56 45 41 00        440  MOVEA   DC.B    'MOVEA',0
00000300= 43 4C 52 00              441  OPCLR   DC.B    'CLR',0
00000304= 4C 45 41 00              442  OPLEA   DC.B    'LEA',0
00000308= 4A 53 52 00              443  OPJSR   DC.B    'JSR',0
0000030C= 4E 4F 50 00              444  OPNOP   DC.B    'NOP',0
00000310= 52 54 53 00              445  OPRTS   DC.B    'RTS',0
00000314= 4D 4F 56 45 4D 00        446  MOVEM   DC.B    'MOVEM',0
0000031A= 41 44 44 51 00           447  ADDQ    DC.B    'ADDQ',0
0000031F= 42 00                    448  Bcc     DC.B    'B',0
00000321= 4D 4F 56 45 51 00        449  MOVEQ   DC.B    'MOVEQ',0
00000327= 44 49 56 55 00           450  DIVU    DC.B    'DIVU',0
0000032C= 4F 52 00                 451  OR      DC.B    'OR',0
0000032F= 53 55 42 00              452  OPSUB   DC.B    'SUB',0
00000333= 43 4D 50 00              453  CMP     DC.B    'CMP',0
00000337= 4D 55 4C 53 00           454  MULS    DC.B    'MULS',0
0000033C= 41 4E 44 00              455  AND     DC.B    'AND',0
00000340= 41 44 44 00              456  ADD     DC.B    'ADD',0
00000344= 41 44 44 41 00           457  ADDA    DC.B    'ADDA',0
00000349= 4C 53 4C 00              458  LSL     DC.B    'LSL',0
0000034D= 4C 53 52 00              459  LSR     DC.B    'LSR',0
00000351= 41 53 4C 00              460  ASL     DC.B    'ASL',0
00000355= 41 53 52 00              461  ASR     DC.B    'ASR',0
00000359= 52 4F 4C 00              462  ROL     DC.B    'ROL',0
0000035D= 52 4F 52 00              463  ROR     DC.B    'ROR',0
00000361                           464  
00000361                           465  
00000361                           466  
00000361                           467  
Line 468 WARNING: END directive missing, starting address not set

30 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD                 340
ADDA                344
ADDI                2F0
ADDQ                31A
AND                 33C
ASL                 351
ASR                 355
BCC                 31F
CMP                 333
DIVU                327
LSL                 349
LSR                 34D
MOVE                2F5
MOVEA               2FA
MOVEM               314
MOVEQ               321
MULS                337
OP0000              82
OP0001              8E
OP0010              9A
OP0011              9E
OP0100              CE
OP0101              15E
OP0110              16A
OP0111              176
OP1000              182
OP1001              1B2
OP1011              1BE
OP1100              1CA
OP1101              1FA
OP1110              22A
OPCLR               300
OPJSR               308
OPLEA               304
OPNOP               30C
OPRTS               310
OPSUB               32F
OP_JTAB             1A
OR                  32C
ROL                 359
ROR                 35D
VERIFY_OPCODE       0
_ADD                212
_ADDA               21E
_AND                1EE
_ASD                288
_ASL                2A2
_ASR                2AE
_CLR                116
_DIVU               19A
_JSR                12E
_LEA                122
_LSD                258
_LSL                270
_LSR                27C
_MOVE               B6
_MOVEA              C2
_MOVEM              152
_MULS               1E2
_NOP                13A
_OR                 1A6
_ROD                2BA
_ROL                2D4
_ROR                2E0
_RTS                146
