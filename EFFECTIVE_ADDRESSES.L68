00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 6/1/2016 3:38:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : EFFECTIVE_ADDRESSES 2.o
00000000                             3  * Written by : JOHN ZOELLER
00000000                             4  * Date       : 5/24/16
00000000                             5  * Description: ALL THE EFFECTIVE ADDRESSES
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8      *EXAMPLE, MOVE A HEX CODE INTO D6
00000000                             9      *CALL THE CORRESPONDING EA CODE
00000000                            10      *MOVE.W     #$2E7C, D6
00000000                            11      *BRA         EA_MOVE
00000000                            12      *END EXAMPLE
00000000                            13      
00000000                            14  *-------------------------MOVE------------------------------------
00000000                            15  EA_MOVE      *1 invalid; done
00000000                            16  *----------------SOURCE-------------------------------------------  
00000000  3C00                      17      MOVE.W      D0, D6 *DO THIS AT THE BEGGINING OF EVERY EA 
00000002                            18      
00000002  3806                      19      MOVE.W      D6, D4      *
00000004  E04C                      20      LSR.W       #8, D4      *
00000006  E84C                      21      LSR.W       #4, D4      *D4 = SIZE
00000008  4EB9 00000752             22      JSR GET_SIZE
0000000E                            23      
0000000E  3806                      24      MOVE.W      D6, D4      *
00000010  E14C                      25      LSL.W       #8, D4      *
00000012  E54C                      26      LSL.W       #2, D4
00000014  E04C                      27      LSR.W       #8, D4      *
00000016  EA4C                      28      LSR.W       #5, D4      *D4 = <0000 0000> D4 = SOURCE MODE
00000018                            29      
00000018  3A06                      30      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
0000001A  E14D                      31      LSL.W       #8, D5  
0000001C  EB4D                      32      LSL.W       #5, D5      *
0000001E  E04D                      33      LSR.W       #8, D5
00000020  EA4D                      34      LSR.W       #5, D5      *D5 = SOURCE REGISTER
00000022                            35      
00000022  4EB9 00000844             36      JSR         MODE_CHOOSER
00000028  41F9 00000696             37      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
0000002E  C9FC 0006                 38      MULS        #6, D4          *GET JUMP
00000032  4EB0 4000                 39      JSR         0(A0, D4)       *JUMP
00000036                            40  *---------------END SOURCE---------------------------------------
00000036  4EB9 000008B4             41      JSR COMMA
0000003C  4EB9 00000916             42      JSR SPACE
00000042                            43  *--------------DESTINATION-------------------------------------
00000042  3806                      44      MOVE.W      D6, D4      *
00000044  EF4C                      45      LSL.W       #7, D4      *
00000046  EE4C                      46      LSR.W       #7, D4      *
00000048  EC4C                      47      LSR.W       #6, D4      *D4 = DESTINATION MODE
0000004A  4EB9 0000060C             48      JSR         MOVE_ERROR_CHECK 
00000050                            49      
00000050  3A06                      50      MOVE.W      D6, D5      *
00000052  E94D                      51      LSL.W       #4, D5      *
00000054  E04D                      52      LSR.W       #8, D5      *
00000056  EA4D                      53      LSR.W       #5, D5      *D5 = DESTINATION REGISTER
00000058                            54      
00000058  4EB9 00000844             55      JSR         MODE_CHOOSER
0000005E  41F9 00000696             56      LEA         MODE_JUMP, A0   *LOAD MODE JUMP
00000064  C9FC 0006                 57      MULS        #6, D4          *GET JUMP
00000068  4EB0 4000                 58      JSR         0(A0, D4)       *JUMP
0000006C                            59  *------------END DESTINATION-------------------------------------
0000006C  16BC 0000                 60      MOVE.B      #00, (A3) 
Line 61 ERROR: Undefined symbol
00000070  6000 BB1C                 61      BRA         VALID_OPCODE
00000074                            62  *-------------------------END MOVE--------------------------------
00000074                            63  *------------------------------------------------------------------
00000074                            64  *-------------------------MOVEA-----------------------------------
00000074                            65  EA_MOVEA        *0 invalid
00000074                            66  *------------------------SOURCE----------------------------------------
00000074  3C00                      67      MOVE.W      D0, D6
00000076                            68  
00000076  3806                      69      MOVE.W      D6, D4      *GETTING SIZE
00000078  E04C                      70      LSR.W       #8, D4      *
0000007A  E84C                      71      LSR.W       #4, D4      *SHIFT 12 BITS RIGHT
0000007C  4EB9 00000752             72      JSR         GET_SIZE    *D4 = SIZE
00000082                            73      
00000082  3806                      74      MOVE.W      D6, D4      *GETTING SOURCE MODE
00000084  E14C                      75      LSL.W       #8, D4      *
00000086  E54C                      76      LSL.W       #2, D4      *SHIFT 10 BITS LEFT; 13 RIGHT
00000088  E04C                      77      LSR.W       #8, D4      *
0000008A  EA4C                      78      LSR.W       #5, D4      *D4 = SOURCE MODE
0000008C                            79  
0000008C  3A06                      80      MOVE.W      D6, D5      *GETTING SOURCE REGISTER
0000008E  E14D                      81      LSL.W       #8, D5      *
00000090  EB4D                      82      LSL.W       #5, D5      *SHIFT LEFT 13; RIGHT 13
00000092  E04D                      83      LSR.W       #8, D5      *
00000094  EA4D                      84      LSR.W       #5, D5      *D5 = SOURCE REGISTER
00000096                            85      
00000096  4EB9 00000844             86      JSR         MODE_CHOOSER  *INCASE MODE IS $111
0000009C  41F9 00000696             87      LEA         MODE_JUMP, A0 *LOAD MODE JUMP TABLE
000000A2  C9FC 0006                 88      MULS        #6, D4        *GET JUMP
000000A6  4EB0 4000                 89      JSR         0(A0, D4)     *JUMP
000000AA                            90  *--------------------END SOURCE------------------------------------------
000000AA  4EB9 000008B4             91      JSR         COMMA
000000B0  4EB9 00000916             92      JSR         SPACE
000000B6                            93  *--------------------DESTINATION--------------------------------------
000000B6  3A06                      94      MOVE.W      D6, D5      *GET THE DESTINATION REGISTER
000000B8  E94D                      95      LSL.W       #4, D5      *
000000BA  E04D                      96      LSR.W       #8, D5      *SHIFT 4 BITS LEFT; 13 RIGHT
000000BC  EA4D                      97      LSR.W       #5, D5      *D5 = DESTINATION REGISTER
000000BE                            98      
000000BE  4EB9 000006D4             99      JSR         ADDR_1
000000C4  16BC 0000                100      MOVE.B      #00, (A3)
Line 101 ERROR: Undefined symbol
000000C8  6000 BAC4                101      BRA         VALID_OPCODE
000000CC                           102  *------------------END DESTINATION--------------------------------------
000000CC                           103  *------------------------END MOVEA------------------------------
000000CC                           104  *----------------------------------------------------------------
000000CC                           105  *-----------------------MOVEQ---------------------------------------
000000CC                           106  EA_MOVEQ        *0 invalid
000000CC                           107  *-----------------------SOURCE-----------------------------------------
000000CC  3C00                     108      MOVE.W      D0, D6
000000CE                           109  
000000CE  4EB9 00000916            110      JSR SPACE
000000D4  4EB9 000008BC            111      JSR POUND
000000DA  4EB9 0000091E            112      JSR CASH
000000E0  6100 0786                113      BSR OUTPUT_HEX    
000000E4                           114  *----------------------END SOURCE--------------------------------------
000000E4  4EB9 000008B4            115      JSR COMMA
000000EA  4EB9 00000916            116      JSR SPACE
000000F0                           117  *---------------------DESTINATION------------------------------------
000000F0  3A06                     118      MOVE.W      D6, D5      *GET THE DESTINATION REGISTER
000000F2  E94D                     119      LSL.W       #4, D5      *
000000F4  E04D                     120      LSR.W       #8, D5      *
000000F6  EA4D                     121      LSR.W       #5, D5      * D5 = DESTINATION REGISTER
000000F8                           122      
000000F8  4EB9 000006C6            123      JSR         DATA_0
000000FE  16BC 0000                124      MOVE.B      #00, (A3)
Line 125 ERROR: Undefined symbol
00000102  6000 BA8A                125      BRA         VALID_OPCODE
00000106                           126  *----------------------END MOVEQ--------------------------------
00000106                           127  *---------------------------------------------------------------
00000106                           128  *------------------------ADD------------------------------------
00000106                           129  EA_ADD          *3 invalid; done
00000106                           130  
00000106                           131  *COVERS ADD, SUB, AND, OR
00000106                           132  *--------------------GET MODES-----------------------------
00000106  3C00                     133      MOVE.W      D0, D6
00000108                           134  
00000108  3806                     135      MOVE.W      D6, D4      *GETTING OPMODE AKA SIZE
0000010A  EF4C                     136      LSL.W       #7, D4      * 
0000010C  EE4C                     137      LSR.W       #7, D4      *
0000010E  EC4C                     138      LSR.W       #6, D4      *D4 = OPMODE AKA SIZE
00000110  4EB9 00000790            139      JSR         GET_OPMODE_MATH *PRINTS THE SIZE
00000116                           140  
00000116  B83C 0003                141      CMP.B       #3, D4
0000011A  6D00 000A                142      BLT         DN_VERSION
0000011E  B83C 0003                143      CMP.B       #3, D4
00000122  6E00 004C                144      BGT         EA_VERSION
00000126                           145  *-------------------END GETS MODES------------------------------
00000126                           146  *-------------------DN VERSION------------------------
00000126                           147  DN_VERSION *EA IS SOURCE, REGISTER IS DESTINATION <EA> + DN -> DN
00000126  3806                     148      MOVE.W      D6, D4      
00000128  E14C                     149      LSL.W       #8, D4      *LEFT 10; RIGHT 13
0000012A  E54C                     150      LSL.W       #2, D4
0000012C  E04C                     151      LSR.W       #8, D4      *
0000012E  EA4C                     152      LSR.W       #5, D4      *D4 = EA MODE
00000130                           153      
00000130  3A06                     154      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
00000132  E14D                     155      LSL.W       #8, D5  
00000134  EB4D                     156      LSL.W       #5, D5      *
00000136  E04D                     157      LSR.W       #8, D5
00000138  EA4D                     158      LSR.W       #5, D5      * D5 = EA REGISTER
0000013A                           159      
0000013A  4EB9 00000844            160      JSR         MODE_CHOOSER    *IF A WORD OR LONG    
00000140  41F9 00000696            161      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
00000146  C9FC 0006                162      MULS        #6, D4          *GET JUMP
0000014A  4EB0 4000                163      JSR         0(A0, D4)       *JUMP
0000014E                           164          
0000014E  4EB9 000008B4            165      JSR         COMMA
00000154  4EB9 00000916            166      JSR         SPACE
0000015A                           167      
0000015A  3A06                     168      MOVE.W      D6, D5      *LEFT 4; RIGHT 13
0000015C  E94D                     169      LSL.W       #4, D5      *
0000015E  E04D                     170      LSR.W       #8, D5      *
00000160  EA4D                     171      LSR.W       #5, D5      *D5 DESTINATION REGISTER
00000162                           172      
00000162  4EB9 000006C6            173      JSR         DATA_0
00000168  16BC 0000                174      MOVE.B      #00, (A3)
Line 175 ERROR: Undefined symbol
0000016C  6000 BA20                175      BRA         VALID_OPCODE
00000170                           176  *-------------------END DN VERSION-------------------
00000170                           177  *-------------------EA VERSION-------------------------
00000170                           178  EA_VERSION
00000170  3A06                     179      MOVE.W      D6, D5      *LEFT 4; RIGHT 13
00000172  E94D                     180      LSL.W       #4, D5      *
00000174  E04D                     181      LSR.W       #8, D5      *
00000176  EA4D                     182      LSR.W       #5, D5      *D5 DESTINATION REGISTER
00000178  4EB9 000006C6            183      JSR         DATA_0
0000017E                           184      
0000017E  4EB9 000008B4            185      JSR         COMMA
00000184  4EB9 00000916            186      JSR         SPACE
0000018A                           187      
0000018A  3806                     188      MOVE.W      D6, D4      
0000018C  E14C                     189      LSL.W       #8, D4      *LEFT 10; RIGHT 13
0000018E  E54C                     190      LSL.W       #2, D4
00000190  E04C                     191      LSR.W       #8, D4      *
00000192  EA4C                     192      LSR.W       #5, D4      *D4 = EA MODE
00000194                           193      
00000194  3A06                     194      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
00000196  E14D                     195      LSL.W       #8, D5  
00000198  EB4D                     196      LSL.W       #5, D5      *
0000019A  E04D                     197      LSR.W       #8, D5
0000019C  EA4D                     198      LSR.W       #5, D5      * D5 = EA REGISTER
0000019E                           199      
0000019E                           200      *the only way there could be an error is if 
0000019E                           201      *we are in THIS addressing mo
0000019E                           202      
0000019E  4EB9 00000844            203      JSR         MODE_CHOOSER    *IF A WORD OR LONG 
000001A4  4EB9 00000616            204      JSR         ADD_ERROR_CHECK
000001AA  41F9 00000696            205      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
000001B0  C9FC 0006                206      MULS        #6, D4          *GET JUMP
000001B4  4EB0 4000                207      JSR         0(A0, D4)       *JUMP
000001B8                           208      
000001B8  16BC 0000                209      MOVE.B      #00, (A3)
Line 210 ERROR: Undefined symbol
000001BC  6000 B9D0                210      BRA         VALID_OPCODE
000001C0                           211  *------------------END EA VERSION----------------------
000001C0                           212  *--------------------END ADD----------------------------
000001C0                           213  *------------------------------------------------------
000001C0                           214  *-------------------ADDI--------------------------------
000001C0                           215  EA_ADDI  *2 invalid; DONE
000001C0                           216  *-------------------PRINT SIZE-----------------------------------
000001C0  3C00                     217      MOVE.W      D0, D6
000001C2                           218      
000001C2  3806                     219      MOVE.W      D6, D4      *
000001C4  E14C                     220      LSL.W       #8, D4      *
000001C6  E04C                     221      LSR.W       #8, D4      *
000001C8  EC4C                     222      LSR.W       #6, D4      *D4 = SIZE
000001CA  4EB9 000007E2            223      JSR         GET_SIZE_ADDI
000001D0                           224  *-----------------END PRINT SIZE-----------------------------
000001D0                           225  *----------------PRINT IMMEDIATE----------------------------
000001D0  4EB9 000008BC            226      JSR         POUND
000001D6  4EB9 0000091E            227      JSR         CASH
000001DC  6100 068A                228      BSR         OUTPUT_HEX
000001E0                           229  *-------------END PRINT IMMEDIATE-----------------------------
000001E0  4EB9 000008B4            230      JSR         COMMA
000001E6  4EB9 00000916            231      JSR         SPACE
000001EC                           232  *-----------------PRINT EA------------------------------------
000001EC  3806                     233      MOVE.W      D6, D4      
000001EE  E14C                     234      LSL.W       #8, D4      *LEFT 10; RIGHT 13
000001F0  E54C                     235      LSL.W       #2, D4
000001F2  E04C                     236      LSR.W       #8, D4      *
000001F4  EA4C                     237      LSR.W       #5, D4      *D4 = EA MODE
000001F6                           238      
000001F6  3A06                     239      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
000001F8  E14D                     240      LSL.W       #8, D5  
000001FA  EB4D                     241      LSL.W       #5, D5      *
000001FC  E04D                     242      LSR.W       #8, D5
000001FE  EA4D                     243      LSR.W       #5, D5      * D5 = EA REGISTER
00000200                           244      
00000200  4EB9 00000844            245      JSR         MODE_CHOOSER    *IF A WORD OR LONG  
00000206  4EB9 00000630            246      JSR         ADDI_ERROR_CHECK
0000020C  41F9 00000696            247      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
00000212  C9FC 0006                248      MULS        #6, D4          *GET JUMP
00000216  4EB0 4000                249      JSR         0(A0, D4)       *JUMP'
0000021A                           250      
0000021A  16BC 0000                251      MOVE.B      #00, (A3)
Line 252 ERROR: Undefined symbol
0000021E  6000 B96E                252      BRA         VALID_OPCODE
00000222                           253  *-------------------END PRINT EA--------------------------
00000222                           254  *-------------------END ADDI------------------------------
00000222                           255  *----------------------------------------------------------
00000222                           256  *------------------------ADDQ----------------------------------
00000222                           257  EA_ADDQ     *0 INVALID
00000222                           258  *-----------------------SOURCE------------------------------------
00000222  3C00                     259      MOVE.W      D0, D6
00000224                           260      
00000224  3806                     261      MOVE.W      D6, D4
00000226  E14C                     262      LSL.W       #8, D4
00000228  E04C                     263      LSR.W       #8, D4
0000022A  EC4C                     264      LSR.W       #6, D4
0000022C  4EB9 000007E2            265      JSR         GET_SIZE_ADDI    *PRINT SIZE
00000232                           266      
00000232  3A06                     267      MOVE.W      D6, D5      *GETTING DATA
00000234  E94D                     268      LSL.W       #4, D5      *SHIFT LEFT 4; RIGHT 13
00000236  E04D                     269      LSR.W       #8, D5      *
00000238  EA4D                     270      LSR.W       #5, D5      *D5 = DATA
0000023A  4EB9 000007C8            271      JSR         GET_DATA
00000240                           272  *--------------------END SOURCE-------------------------------------
00000240  4EB9 000008B4            273      JSR COMMA
00000246  4EB9 00000916            274      JSR SPACE
0000024C                           275  *-------------------PRINT EA-----------------------------------
0000024C  3806                     276      MOVE.W      D6, D4      *GETTING EA MODE
0000024E  E14C                     277      LSL.W       #8, D4      *
00000250  E54C                     278      LSL.W       #2, D4      *SHIFT 10 LEFT; 13 RIGHT
00000252  E04C                     279      LSR.W       #8, D4      *
00000254  EA4C                     280      LSR.W       #5, D4      *D4 = EA MODE
00000256                           281      
00000256  3A06                     282      MOVE.W      D6, D5      *GETTING EA REGISTER
00000258  E14D                     283      LSL.W       #8, D5      *
0000025A  EB4D                     284      LSL.W       #5, D5      *SHIFT LEFT 13; RIGHT 13
0000025C  E04D                     285      LSR.W       #8, D5      *
0000025E  EA4D                     286      LSR.W       #5, D5      *D5 = EA REGISTER
00000260                           287      
00000260  4EB9 00000844            288      JSR         MODE_CHOOSER
00000266  41F9 00000696            289      LEA         MODE_JUMP, A0   *LOAD MODE JUMP
0000026C  C9FC 0006                290      MULS        #6, D4          *GET JUMP
00000270  4EB0 4000                291      JSR         0(A0, D4)       *JUMP
00000274                           292      
00000274  16BC 0000                293      MOVE.B      #00, (A3)
00000278                           294      
Line 295 ERROR: Undefined symbol
00000278  6000 B914                295      BRA         VALID_OPCODE
0000027C                           296  *-------------------END PRINT EA-------------------------------
0000027C                           297  *----------------------END ADDQ---------------------------------
0000027C                           298  *--------------------------------------------------------------
0000027C                           299  *-------------------------ADDA------------------------------------
0000027C                           300  EA_ADDA         *0 INVALID
0000027C                           301  *-----------------------SOURCE------------------------------
0000027C  3C00                     302      MOVE.W      D0, D6
0000027E                           303      
0000027E  3806                     304      MOVE.W      D6, D4      *GETTING OPMODE AKA SIZE
00000280  EF4C                     305      LSL.W       #7, D4      * 
00000282  EE4C                     306      LSR.W       #7, D4      *
00000284  EC4C                     307      LSR.W       #6, D4      *D4 = OPMODE AKA SIZE
00000286  4EB9 00000778            308      JSR         GET_OPMODE
0000028C                           309      
0000028C  3806                     310      MOVE.W      D6, D4      *GETTING SOURCE MODE
0000028E  E14C                     311      LSL.W       #8, D4      *
00000290  E54C                     312      LSL.W       #2, D4      *SHIFT 10 BITS LEFT; 13 RIGHT
00000292  E04C                     313      LSR.W       #8, D4      *
00000294  EA4C                     314      LSR.W       #5, D4      *D4 = SOURCE MODE
00000296                           315      
00000296  3A06                     316      MOVE.W      D6, D5      *GETTING SOURCE REGISTER
00000298  E14D                     317      LSL.W       #8, D5      *
0000029A  EB4D                     318      LSL.W       #5, D5      *SHIFT LEFT 13; RIGHT 13
0000029C  E04D                     319      LSR.W       #8, D5      *
0000029E  EA4D                     320      LSR.W       #5, D5      *D5 = SOURCE REGISTER
000002A0                           321      
000002A0  4EB9 00000844            322      JSR         MODE_CHOOSER  *INCASE MODE IS $111
000002A6  41F9 00000696            323      LEA         MODE_JUMP, A0 *LOAD MODE JUMP TABLE
000002AC  C9FC 0006                324      MULS        #6, D4        *GET JUMP
000002B0  4EB0 4000                325      JSR         0(A0, D4)     *JUMP
000002B4                           326  *-----------------------END SOURCE--------------------------
000002B4  4EB9 000008B4            327      JSR COMMA 
000002BA  4EB9 00000916            328      JSR SPACE
000002C0                           329  *-----------------------DESTINATION-------------------------
000002C0  3A06                     330      MOVE.W      D6, D5      *GET THE DESTINATION REGISTER
000002C2  E94D                     331      LSL.W       #4, D5      *
000002C4  E04D                     332      LSR.W       #8, D5      *SHIFT 4 BITS LEFT; 13 RIGHT
000002C6  EA4D                     333      LSR.W       #5, D5      *D5 = DESTINATION REGISTER
000002C8                           334      
000002C8  4EB9 000006D4            335      JSR         ADDR_1
000002CE  16BC 0000                336      MOVE.B      #00, (A3)
000002D2                           337      
Line 338 ERROR: Undefined symbol
000002D2  6000 B8BA                338      BRA         VALID_OPCODE
000002D6                           339  *-----------------------END DESTINATION---------------------
000002D6                           340  *-------------------------END ADDA--------------------------------
000002D6                           341  *---------------------------------------------------------------
000002D6                           342  *------------------------------MULS--------------------------------
000002D6                           343  EA_MULS                *1 INVALID;
000002D6                           344  *COVERS DIVU, MULS     *NEITHER CAN BE ADDR REG
000002D6                           345  *COMPLICATED BECAUSE: if one is an address and the other is 
000002D6                           346  *an absolute word or immediate data, you have to eat it. 
000002D6                           347  
000002D6                           348  *----------------------PRINT EA-------------------------
000002D6  3C00                     349      MOVE.W      D0, D6
000002D8                           350      
000002D8  4EB9 00000916            351      JSR         SPACE
000002DE  3806                     352      MOVE.W      D6, D4      
000002E0  E14C                     353      LSL.W       #8, D4      *LEFT 10; RIGHT 13
000002E2  E54C                     354      LSL.W       #2, D4
000002E4  E04C                     355      LSR.W       #8, D4      *
000002E6  EA4C                     356      LSR.W       #5, D4      *D4 = EA MODE
000002E8                           357      
000002E8  3A06                     358      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
000002EA  E14D                     359      LSL.W       #8, D5  
000002EC  EB4D                     360      LSL.W       #5, D5      *
000002EE  E04D                     361      LSR.W       #8, D5
000002F0  EA4D                     362      LSR.W       #5, D5      * D5 = EA REGISTER
000002F2                           363      
000002F2  4EB9 00000844            364      JSR         MODE_CHOOSER    *IF A WORD OR LONG    
000002F8  41F9 00000696            365      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
000002FE  C9FC 0006                366      MULS        #6, D4          *GET JUMP
00000302  4EB0 4000                367      JSR         0(A0, D4)       *JUMP
00000306                           368  *--------------------END PRINT EA----------------------
00000306  4EB9 000008B4            369      JSR         COMMA
0000030C  4EB9 00000916            370      JSR         SPACE
00000312                           371  *--------------------PRINT REGISTER--------------------
00000312  3A06                     372      MOVE.W      D6, D5      *LEFT 4; RIGHT 13
00000314  E94D                     373      LSL.W       #4, D5      *
00000316  E04D                     374      LSR.W       #8, D5      *
00000318  EA4D                     375      LSR.W       #5, D5      *D5 DESTINATION REGISTER
0000031A                           376      
0000031A  4EB9 000006C6            377      JSR         DATA_0
00000320  16BC 0000                378      MOVE.B      #00, (A3)
00000324                           379      
Line 380 ERROR: Undefined symbol
00000324  6000 B868                380      BRA         VALID_OPCODE
00000328                           381  *---------------------------END MULS------------------------------
00000328                           382  *----------------------------------------------------------------
00000328                           383  *-------------------------LEA-----------------------------------
00000328                           384  EA_LEA          *5 INVALIDS; DONE
00000328                           385  *-------------------SOURCE-------------------------------------
00000328  3C00                     386      MOVE.W      D0, D6
0000032A                           387      
0000032A  4EB9 00000916            388      JSR         SPACE
00000330  3806                     389      MOVE.W      D6, D4      *GETTING SOURCE MODE
00000332  E14C                     390      LSL.W       #8, D4      *
00000334  E54C                     391      LSL.W       #2, D4      *SHIFT 10 BITS LEFT; 13 RIGHT
00000336  E04C                     392      LSR.W       #8, D4      *
00000338  EA4C                     393      LSR.W       #5, D4      *D4 = SOURCE MODE
0000033A                           394      
0000033A  3A06                     395      MOVE.W      D6, D5      *GETTING SOURCE REGISTER
0000033C  E14D                     396      LSL.W       #8, D5      *
0000033E  EB4D                     397      LSL.W       #5, D5      *SHIFT LEFT 13; RIGHT 13
00000340  E04D                     398      LSR.W       #8, D5      *
00000342  EA4D                     399      LSR.W       #5, D5      *D5 = SOURCE REGISTER
00000344                           400      
00000344  4EB9 00000844            401      JSR         MODE_CHOOSER  *INCASE MODE IS $111
0000034A  4EB9 00000642            402      JSR         LEA_ERROR_CHECK
00000350  41F9 00000696            403      LEA         MODE_JUMP, A0 *LOAD MODE JUMP TABLE
00000356  C9FC 0006                404      MULS        #6, D4        *GET JUMP
0000035A  4EB0 4000                405      JSR         0(A0, D4)     *JUMP
0000035E                           406  *-------------------END SOURCE---------------------------------
0000035E  4EB9 000008B4            407      JSR COMMA
00000364  4EB9 00000916            408      JSR SPACE
0000036A                           409  *-------------------DESTINATION-------------------------------
0000036A  3A06                     410      MOVE.W      D6, D5      *GET THE DESTINATION REGISTER
0000036C  E94D                     411      LSL.W       #4, D5      *
0000036E  E04D                     412      LSR.W       #8, D5      *SHIFT 4 BITS LEFT; 13 RIGHT
00000370  EA4D                     413      LSR.W       #5, D5      *D5 = DESTINATION REGISTER
00000372                           414      
00000372  4EB9 000006D4            415      JSR         ADDR_1
00000378  16BC 0000                416      MOVE.B      #00, (A3)
0000037C                           417      
Line 418 ERROR: Undefined symbol
0000037C  6000 B810                418      BRA         VALID_OPCODE
00000380                           419  *-----------------END DESTINATION-----------------------------
00000380                           420  *------------------------END LEA--------------------------------
00000380                           421  *-----------------------------------------------------------------
00000380                           422  *------------------------CLR-------------------------------------
00000380                           423  EA_CLR          *2 INVALID; DONE
00000380                           424  *-------------------PRINT SIZE-----------------------
00000380  3C00                     425      MOVE.W      D0, D6
00000382                           426      
00000382  3806                     427      MOVE.W      D6, D4
00000384  E14C                     428      LSL.W       #8, D4      *
00000386  E04C                     429      LSR.W       #8, D4      *
00000388  EC4C                     430      LSR.W       #6, D4      *D4 = SIZE
0000038A  4EB9 000007E2            431      JSR         GET_SIZE_ADDI
00000390                           432  *----------------END PRINT SIZE-------------------------
00000390                           433  *---------------PRINT EA---------------------------------
00000390  3806                     434      MOVE.W      D6, D4      
00000392  E14C                     435      LSL.W       #8, D4      *LEFT 10; RIGHT 13
00000394  E54C                     436      LSL.W       #2, D4
00000396  E04C                     437      LSR.W       #8, D4      *
00000398  EA4C                     438      LSR.W       #5, D4      *D4 = EA MODE
0000039A                           439      
0000039A  3A06                     440      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
0000039C  E14D                     441      LSL.W       #8, D5  
0000039E  EB4D                     442      LSL.W       #5, D5      *
000003A0  E04D                     443      LSR.W       #8, D5
000003A2  EA4D                     444      LSR.W       #5, D5      * D5 = EA REGISTER
000003A4                           445      
000003A4  4EB9 00000844            446      JSR         MODE_CHOOSER    *IF A WORD OR LONG  
000003AA  4EB9 00000630            447      JSR         ADDI_ERROR_CHECK  
000003B0  41F9 00000696            448      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
000003B6  C9FC 0006                449      MULS        #6, D4          *GET JUMP
000003BA  4EB0 4000                450      JSR         0(A0, D4)       *JUMP
000003BE                           451      
000003BE  16BC 0000                452      MOVE.B      #00, (A3)
000003C2                           453      
Line 454 ERROR: Undefined symbol
000003C2  6000 B7CA                454      BRA         VALID_OPCODE
000003C6                           455  *---------------END PRINT EA-------------------------
000003C6                           456  *------------------------END CLR--------------------------------
000003C6                           457  *----------------------------------------------------------------
000003C6                           458  *--------------------------SHIFTS------------------------------
000003C6                           459  EA_LSD          *3 INVALID; DONE
000003C6                           460  *COVERS LSD, ASD, ROD
000003C6                           461  *-------------------------SIZE---------------------------
000003C6  3C00                     462      MOVE.W      D0, D6
000003C8                           463      
000003C8  3806                     464      MOVE.W      D6, D4
000003CA  E14C                     465      LSL.W       #8, D4
000003CC  E04C                     466      LSR.W       #8, D4
000003CE  EC4C                     467      LSR.W       #6, D4      *ISOLATE SIZE
000003D0  4EB9 000007E2            468      JSR         GET_SIZE_ADDI  *PRINT SIZE
000003D6  B83C 0003                469      CMP.B       #3, D4      *EA SHIFT
000003DA  6700 003E                470      BEQ         EA_SHIFT    *BRANCH TO EA SHIFT
000003DE                           471  *-----------------------END SIZE--------------------------
000003DE                           472  *-----------------------SHIFTING------------------------------
000003DE  3806                     473      MOVE.W      D6, D4
000003E0  E14C                     474      LSL.W       #8, D4
000003E2  E54C                     475      LSL.W       #2, D4
000003E4  E04C                     476      LSR.W       #8, D4
000003E6  EE4C                     477      LSR.W       #7, D4      *D4 = TYPE
000003E8                           478      
000003E8  3A06                     479      MOVE.W      D6, D5      *GETTING DATA
000003EA  E94D                     480      LSL.W       #4, D5      *SHIFT LEFT 4; RIGHT 13
000003EC  E04D                     481      LSR.W       #8, D5      *
000003EE  EA4D                     482      LSR.W       #5, D5      *D5 = DATA / REGISTER
000003F0                           483      
000003F0  4EB9 00000802            484      JSR         TYPE_CHOOSER
000003F6                           485  *-----------------------END SHIFTING---------------------------
000003F6  4EB9 000008B4            486      JSR         COMMA
000003FC  4EB9 00000916            487      JSR         SPACE
00000402                           488  *----------------------DESTINATION------------------------------
00000402  3A06                     489      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
00000404  E14D                     490      LSL.W       #8, D5  
00000406  EB4D                     491      LSL.W       #5, D5      *
00000408  E04D                     492      LSR.W       #8, D5
0000040A  EA4D                     493      LSR.W       #5, D5      * D5 = EA REGISTER
0000040C  4EB9 000006C6            494      JSR         DATA_0
00000412                           495      
00000412  16BC 0000                496      MOVE.B      #00, (A3)
00000416                           497      
Line 498 ERROR: Undefined symbol
00000416  6000 B776                498      BRA         VALID_OPCODE
0000041A                           499  *----------------------END DESTINATION-------------------------    
0000041A                           500  *---------------------------EA SHIFT-------------------------------
0000041A                           501  EA_SHIFT
0000041A  4EB9 00000916            502      JSR         SPACE
00000420  3806                     503      MOVE.W      D6, D4      *
00000422  E14C                     504      LSL.W       #8, D4      *
00000424  E54C                     505      LSL.W       #2, D4
00000426  E04C                     506      LSR.W       #8, D4      *
00000428  EA4C                     507      LSR.W       #5, D4      *D4 = EA MODE
0000042A                           508      
0000042A  3A06                     509      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
0000042C  E14D                     510      LSL.W       #8, D5  
0000042E  EB4D                     511      LSL.W       #5, D5      *
00000430  E04D                     512      LSR.W       #8, D5
00000432  EA4D                     513      LSR.W       #5, D5      * D5 = EA REGISTER
00000434                           514      
00000434  4EB9 00000844            515      JSR         MODE_CHOOSER    *IF A WORD OR LONG   
0000043A  4EB9 00000616            516      JSR         ADD_ERROR_CHECK 
00000440  41F9 00000696            517      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
00000446  C9FC 0006                518      MULS        #6, D4          *GET JUMP
0000044A  4EB0 4000                519      JSR         0(A0, D4)       *JUMP
0000044E  6000 0002                520      BRA         DONE
00000452                           521  *-------------------------END EA SHIFT------------------------------
00000452                           522  DONE
00000452  16BC 0000                523      MOVE.B      #00, (A3)
00000456                           524      
Line 525 ERROR: Undefined symbol
00000456  6000 B736                525      BRA         VALID_OPCODE
0000045A                           526  
0000045A                           527  *----------------------------END SHIFTS---------------------------
0000045A                           528  *---------------------------------------------------------------
0000045A                           529  *-------------------------------CMP-----------------------------
0000045A                           530  EA_CMP          *0 INVALID
0000045A                           531  *------------------PRINT SIZE----------------------------
0000045A  3C00                     532      MOVE.W      D0, D6
0000045C                           533      
0000045C  3806                     534      MOVE.W      D6, D4      *GETTING OPMODE AKA SIZE
0000045E  EF4C                     535      LSL.W       #7, D4      * 
00000460  EE4C                     536      LSR.W       #7, D4      *
00000462  EC4C                     537      LSR.W       #6, D4      *D4 = OPMODE AKA SIZE
00000464  4EB9 000007E2            538      JSR         GET_SIZE_ADDI
0000046A                           539  *---------------END PRINT SIZE-------------------------
0000046A                           540  *------------------PRINT EA---------------------------
0000046A  3806                     541      MOVE.W      D6, D4      
0000046C  E14C                     542      LSL.W       #8, D4      *LEFT 10; RIGHT 13
0000046E  E54C                     543      LSL.W       #2, D4
00000470  E04C                     544      LSR.W       #8, D4      *
00000472  EA4C                     545      LSR.W       #5, D4      *D4 = EA MODE
00000474                           546      
00000474  3A06                     547      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
00000476  E14D                     548      LSL.W       #8, D5  
00000478  EB4D                     549      LSL.W       #5, D5      *
0000047A  E04D                     550      LSR.W       #8, D5
0000047C  EA4D                     551      LSR.W       #5, D5      * D5 = EA REGISTER
0000047E                           552      
0000047E  4EB9 00000844            553      JSR         MODE_CHOOSER    *IF A WORD OR LONG    
00000484  41F9 00000696            554      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
0000048A  C9FC 0006                555      MULS        #6, D4          *GET JUMP
0000048E  4EB0 4000                556      JSR         0(A0, D4)       *JUMP
00000492                           557  *-----------------END PRINT EA-------------------------
00000492  4EB9 000008B4            558      JSR         COMMA
00000498  4EB9 00000916            559      JSR         SPACE
0000049E                           560  *----------------PRINT REG----------------------------
0000049E  3A06                     561      MOVE.W      D6, D5      *LEFT 4; RIGHT 13
000004A0  E94D                     562      LSL.W       #4, D5      *
000004A2  E04D                     563      LSR.W       #8, D5      *
000004A4  EA4D                     564      LSR.W       #5, D5      *D5 DESTINATION REGISTER
000004A6                           565      
000004A6  4EB9 000006C6            566      JSR         DATA_0
000004AC  16BC 0000                567      MOVE.B      #00, (A3)
000004B0                           568      
Line 569 ERROR: Undefined symbol
000004B0  6000 B6DC                569      BRA         VALID_OPCODE
000004B4                           570  *--------------END PRINT REG---------------------------
000004B4                           571  *------------------------------END CMP----------------------------
000004B4                           572  *-----------------------------------------------------------------
000004B4                           573  *--------------------------------BCC------------------------------
000004B4                           574  EA_BCC          *0 INVALID (I THINK)
000004B4                           575  *--------------------PRINT TYPE------------------------
000004B4  3C00                     576      MOVE.W      D0, D6
000004B6                           577      
000004B6  3806                     578      MOVE.W      D6, D4
000004B8  E94C                     579      LSL.W       #4, D4
000004BA  E04C                     580      LSR.W       #8, D4
000004BC  E84C                     581      LSR.W       #4, D4   *D4 = BINARY CONDITION CODE
000004BE  4EB9 00000812            582      JSR         PRINT_BCC
000004C4                           583  *-------------------END PRINT TYPE---------------------
000004C4  4EB9 00000916            584      JSR         SPACE
000004CA                           585  *------------------PRINT ADDRESS OR SOMETHING---------
000004CA  4EB9 00000868            586      JSR         OUTPUT_HEX
000004D0  16BC 0000                587      MOVE.B      #00, (A3)
000004D4                           588      
Line 589 ERROR: Undefined symbol
000004D4  6000 B6B8                589      BRA         VALID_OPCODE
000004D8                           590  *-------------END PRINT ADDRESS OR SOMETHING-------------
000004D8                           591  *-----------------------------END BCC-------------------------------
000004D8                           592  *-------------------------------------------------------------------
000004D8                           593  *---------------------------JSR---------------------------------------
000004D8                           594  EA_JSR   *5 INVALID; DONE
000004D8                           595  
000004D8  3C00                     596      MOVE.W      D0, D6
000004DA                           597      
000004DA  4EB9 00000916            598      JSR         SPACE
000004E0  3806                     599      MOVE.W      D6, D4      *GETTING SOURCE MODE
000004E2  E14C                     600      LSL.W       #8, D4      *
000004E4  E54C                     601      LSL.W       #2, D4      *SHIFT 10 BITS LEFT; 13 RIGHT
000004E6  E04C                     602      LSR.W       #8, D4      *
000004E8  EA4C                     603      LSR.W       #5, D4      *D4 = SOURCE MODE
000004EA                           604      
000004EA  3A06                     605      MOVE.W      D6, D5      *GETTING SOURCE REGISTER
000004EC  E14D                     606      LSL.W       #8, D5      *
000004EE  EB4D                     607      LSL.W       #5, D5      *SHIFT LEFT 13; RIGHT 13
000004F0  E04D                     608      LSR.W       #8, D5      *
000004F2  EA4D                     609      LSR.W       #5, D5      *D5 = SOURCE REGISTER
000004F4                           610      
000004F4  4EB9 00000844            611      JSR         MODE_CHOOSER  *INCASE MODE IS $111
000004FA  4EB9 00000642            612      JSR         LEA_ERROR_CHECK
00000500  41F9 00000696            613      LEA         MODE_JUMP, A0 *LOAD MODE JUMP TABLE
00000506  C9FC 0006                614      MULS        #6, D4        *GET JUMP
0000050A  4EB0 4000                615      JSR         0(A0, D4)     *JUM
0000050E                           616      
0000050E  16BC 0000                617      MOVE.B      #00, (A3)
00000512                           618      
Line 619 ERROR: Undefined symbol
00000512  6000 B67A                619      BRA         VALID_OPCODE
00000516                           620  *---------------------------END JSR----------------------------------
00000516                           621  *-----------------------------------------------------------------
00000516                           622  *-----------------------------MOVEM-------------------------------
00000516                           623  EA_MOVEM
00000516                           624  
00000516  3C00                     625      MOVE.W      D0, D6
00000518                           626  *---------------------SIZE--------------------------------
00000518  3806                     627      MOVE.W      D6, D4
0000051A  EB4C                     628      LSL.W       #5, D4
0000051C  E94C                     629      LSL.W       #4, D4
0000051E  E04C                     630      LSR.W       #8, D4
00000520  EE4C                     631      LSR.W       #7, D4
00000522  4EB9 0000082C            632      JSR         REG_SIZE
00000528                           633  *-------------------END SIZE----------------------------
00000528                           634  *--------------------TYPE-------------------------------
00000528  3E06                     635      MOVE.W      D6, D7
0000052A  EB4F                     636      LSL.W       #5, D7
0000052C  E04F                     637      LSR.W       #8, D7
0000052E  EE4F                     638      LSR.W       #7, D7
00000530  BE3C 0000                639      CMP.B       #0, D7
00000534  6700 003E                640      BEQ         PRINT_LIST
00000538                           641  *-------------------END TYPE---------------------------
00000538                           642  *----------------------EA INFO-----------------------
00000538  BE7C 0000                643  EAP CMP.W       #0, D7      *IF ITS A ZERO, THAT MEANS WE JUST JUMPED HERE 
0000053C  6700 00A2                644      BEQ         COMMA_SPACE *FROM CHECK TYPE, ELSE MEANS ITS UNALTERED
00000540  3806                     645  EAS MOVE.W      D6, D4      
00000542  E14C                     646      LSL.W       #8, D4      *LEFT 10; RIGHT 13
00000544  E54C                     647      LSL.W       #2, D4
00000546  E04C                     648      LSR.W       #8, D4      *
00000548  EA4C                     649      LSR.W       #5, D4      *D4 = EA MODE
0000054A                           650      
0000054A  3A06                     651      MOVE.W      D6, D5      *SHIFT LEFT 13; RIGHT 13
0000054C  E14D                     652      LSL.W       #8, D5  
0000054E  EB4D                     653      LSL.W       #5, D5      *
00000550  E04D                     654      LSR.W       #8, D5
00000552  EA4D                     655      LSR.W       #5, D5      * D5 = EA REGISTER
00000554                           656      
00000554  4EB9 00000844            657      JSR         MODE_CHOOSER    *IF A WORD OR LONG    
0000055A  41F9 00000696            658      LEA         MODE_JUMP, A0   *LOAD MODE JUMP TABLE
00000560  C9FC 0006                659      MULS        #6, D4          *GET JUMP
00000564  4EB0 4000                660      JSR         0(A0, D4)       *JUMP
00000568                           661      
00000568  BE7C 0001                662      CMP.W       #1, D7 *IF ONE THEN THIS WAS PRINTED FIRST
0000056C  6700 0006                663      BEQ         PRINT_LIST
00000570                           664      
00000570  6000 008E                665      BRA         DONE_PRINTING
00000574                           666  *--------------------END EA INFO--------------------------
00000574                           667  *---------------------REGISTER PRINT------------------------
00000574                           668  PRINT_LIST
00000574  BE3C 0001                669      CMP.B       #1, D7 
00000578  6700 0076                670      BEQ         COMMA_SPACE2
0000057C  2E0A                     671  EA2 MOVE.L      A2, D7
0000057E  548A                     672      ADD.L       #2, A2
00000580  143C 0008                673      MOVE.B      #$8, D2
00000584  4244                     674      CLR         D4
00000586                           675  FOR_LOOP    
00000586  B404                     676      CMP.B       D4, D2
00000588  6700 001E                677      BEQ         ADDRESS_REGISTERS
0000058C  E25F                     678      ROR.W       #1, D7
0000058E  6000 0006                679      BRA         PRINT_CURRENT
00000592  5244                     680  JFZ ADDQ        #1, D4
00000594  60F0                     681      BRA         FOR_LOOP
00000596                           682      
00000596                           683  PRINT_CURRENT
00000596  64FA                     684      BCC         JFZ
00000598  1A04                     685      MOVE.B      D4, D5
0000059A  4EB9 000006C6            686      JSR         DATA_0
000005A0  4EB9 0000093E            687      JSR         SLASH
000005A6  60EA                     688      BRA         JFZ
000005A8                           689      
000005A8                           690  ADDRESS_REGISTERS
000005A8  4244                     691      CLR         D4
000005AA                           692  FOR_2
000005AA  B404                     693      CMP.B       D4, D2
000005AC  6700 001E                694      BEQ         CHECK_TYPE
000005B0  E25F                     695      ROR.W       #1, D7
000005B2  6000 0006                696      BRA         EA_PRINT_ADDRESS
000005B6  5244                     697  JFF ADDQ        #1, D4
000005B8  60F0                     698      BRA         FOR_2
000005BA                           699      
000005BA                           700  EA_PRINT_ADDRESS
000005BA  64FA                     701      BCC         JFF
000005BC  1A04                     702      MOVE.B      D4, D5
000005BE  4EB9 0000093E            703      JSR         SLASH
000005C4  4EB9 000006D4            704      JSR         ADDR_1
000005CA  60EA                     705      BRA         JFF  
000005CC                           706  *----------------------END REGISTER PRINT-----------------
000005CC                           707  CHECK_TYPE
000005CC  3E06                     708      MOVE.W      D6, D7
000005CE  EB4F                     709      LSL.W       #5, D7  
000005D0  E04F                     710      LSR.W       #8, D7
000005D2  EE4F                     711      LSR.W       #7, D7
000005D4  BE3C 0000                712      CMP.B       #0, D7   *IF TYPE IS 0 THE LIST HAS BEEN PRINTED FIRST  
000005D8  6700 FF5E                713      BEQ         EAP      *THEREFORE ITS TIME TO PRINT THE EAP
000005DC  6600 0022                714      BNE         DONE_PRINTING
000005E0                           715      
000005E0                           716  COMMA_SPACE
000005E0  4EB9 000008B4            717      JSR         COMMA
000005E6  4EB9 00000916            718      JSR         SPACE
000005EC  6000 FF52                719      BRA         EAS
000005F0                           720      
000005F0                           721  COMMA_SPACE2
000005F0  4EB9 000008B4            722      JSR         COMMA
000005F6  4EB9 00000916            723      JSR         SPACE
000005FC  6000 FF7E                724      BRA         EA2
00000600                           725      
00000600                           726  DONE_PRINTING
00000600  16BC 0000                727      MOVE.B      #00, (A3)
Line 728 ERROR: Undefined symbol
00000604  6000 B588                728      BRA         VALID_OPCODE
00000608                           729  
00000608                           730  
00000608                           731  *------------------------------END MOVEM----------------------------
00000608                           732  
00000608                           733  
00000608                           734  
00000608                           735  
00000608                           736  
00000608                           737  
00000608                           738  
00000608                           739  
00000608                           740  
00000608                           741  
00000608                           742  
00000608                           743  
00000608                           744  
00000608                           745  
00000608                           746  BYEBYE
00000608  FFFF FFFF                747      SIMHALT
0000060C                           748  
0000060C                           749  
0000060C                           750  
0000060C                           751  
0000060C                           752  
0000060C                           753  
0000060C                           754  
0000060C                           755  
0000060C                           756  
0000060C                           757  
0000060C                           758  
0000060C                           759  
0000060C                           760  
0000060C                           761  
0000060C                           762  
0000060C                           763  *-------------------ERROR CHECK--------------------------------
0000060C                           764  MOVE_ERROR_CHECK       *only invalid move is desn addr reg
0000060C  B83C 0001                765      CMP.B       #1, D4 *if d4 is one, dest is addr reg
00000610  6700 0334                766      BEQ         INVALID
00000614  4E75                     767      RTS
00000616                           768      
00000616                           769  ADD_ERROR_CHECK  *COVERS ALL SHIFTS
00000616  B83C 0007                770      CMP.B       #7, D4
0000061A  6700 0072                771      BEQ         EAT_INVALID
0000061E  B83C 0001                772      CMP.B       #1, D4
00000622  6700 0322                773      BEQ         INVALID
00000626  B83C 0000                774      CMP.B       #0, D4
0000062A  6700 031A                775      BEQ         INVALID
0000062E  4E75                     776      RTS 
00000630                           777      
00000630                           778  ADDI_ERROR_CHECK *COVERS CLR
00000630  B83C 0001                779      CMP.B       #1, D4
00000634  6700 0310                780      BEQ         INVALID
00000638  B83C 0007                781      CMP.B       #7, D4
0000063C  6700 0050                782      BEQ         EAT_INVALID
00000640  4E75                     783      RTS
00000642                           784      
00000642                           785  LEA_ERROR_CHECK *COVERS JSR
00000642  B83C 0000                786      CMP.B       #0, D4
00000646  6700 02FE                787      BEQ         INVALID
0000064A  B83C 0001                788      CMP.B       #1, D4
0000064E  6700 02F6                789      BEQ         INVALID
00000652  B83C 0003                790      CMP.B       #3, D4
00000656  6700 02EE                791      BEQ         INVALID
0000065A  B83C 0004                792      CMP.B       #4, D4
0000065E  6700 02E6                793      BEQ         INVALID
00000662  B83C 0007                794      CMP.B       #7, D4
00000666  6700 0026                795      BEQ         EAT_INVALID
0000066A  4E75                     796      RTS
0000066C                           797      
0000066C                           798  MOVEM_ERROR_CHECK *0, 1, 4, 7
0000066C  B83C 0000                799      CMP.B       #0, D4
00000670  6700 02D4                800      BEQ         INVALID
00000674  B83C 0001                801      CMP.B       #1, D4
00000678  6700 02CC                802      BEQ         INVALID
0000067C  B83C 0004                803      CMP.B       #4, D4
00000680  6700 02C4                804      BEQ         INVALID
00000684  B83C 0007                805      CMP.B       #7, D4
00000688  6700 0004                806      BEQ         EAT_INVALID
0000068C  4E75                     807      RTS
0000068E                           808      
0000068E                           809      
0000068E                           810      
0000068E                           811      *assuming FOR NOW that it always eats a long
0000068E                           812  EAT_INVALID *EATS THE NEXT TWO WORD VALUES... THEN CALLS INVALID
0000068E  548A                     813      ADD.L       #2, A2      *EAT THE FIRST WORD
00000690  548A                     814      ADD.L       #2, A2      *EAT THE SECOND WORD
00000692  6000 02B2                815      BRA         INVALID
00000696                           816  *-----------------END ERROR CHECK-------------------------------
00000696                           817  
00000696                           818  
00000696                           819  
00000696                           820  
00000696                           821  
00000696                           822  
00000696                           823  
00000696                           824  
00000696                           825  
00000696                           826  
00000696                           827  
00000696                           828  
00000696                           829  
00000696                           830  
00000696                           831  
00000696                           832  
00000696                           833  
00000696                           834  
00000696                           835  *-----------------START MODE JUMP-----------------------------------
00000696  4EF9 000006C6            836  MODE_JUMP       JMP     DATA_0
0000069C  4EF9 000006D4            837                  JMP     ADDR_1
000006A2  4EF9 000006E2            838                  JMP     ADDI_2
000006A8  4EF9 000006F4            839                  JMP     ADDP_3
000006AE  4EF9 00000700            840                  JMP     ADDM_4
000006B4  4EF9 0000070C            841                  JMP     ABSW_5
000006BA  4EF9 0000071C            842                  JMP     ABSL_6
000006C0  4EF9 00000734            843                  JMP     IMME_7
000006C6                           844  
000006C6                           845  DATA_0 *DONE
000006C6  16F9 0000096E            846      MOVE.B      M_DREG, (A3)+
000006CC  4EB9 00000772            847      JSR         GET_REG
000006D2  4E75                     848      RTS
000006D4                           849  
000006D4                           850  ADDR_1 *ADD CONDITIONS FOR SOURCE ONLY, AND NEVER BYTES
000006D4  16F9 00000970            851      MOVE.B      M_AREG, (A3)+
000006DA  4EB9 00000772            852      JSR         GET_REG
000006E0  4E75                     853      RTS
000006E2                           854   
000006E2                           855  ADDI_2 *DONE
000006E2  4EB9 000008F6            856      JSR         OPEN
000006E8  4EB8 06D4                857      JSR         ADDR_1
000006EC  4EB9 000008FE            858      JSR         CLOSE
000006F2  4E75                     859      RTS
000006F4                           860      
000006F4                           861  ADDP_3 *DONE
000006F4  4EB8 06E2                862      JSR         ADDI_2
000006F8  4EB9 00000906            863      JSR         PLUS
000006FE  4E75                     864      RTS
00000700                           865      
00000700                           866  ADDM_4 *DONE
00000700  4EB9 0000090E            867      JSR         SUB
00000706  4EB8 06E2                868      JSR         ADDI_2
0000070A  4E75                     869      RTS
0000070C                           870      
0000070C                           871  ABSW_5  *DONE
0000070C  340A                     872      MOVE.W      A2, D2
0000070E  4EB9 0000091E            873      JSR         CASH
00000714  6100 0152                874      BSR         OUTPUT_HEX
00000718  548A                     875      ADD.L       #2, A2
0000071A  4E75                     876      RTS
0000071C                           877  
0000071C                           878   
0000071C                           879  ABSL_6 *
0000071C  4EB9 0000091E            880      JSR         CASH
00000722                           881      
00000722  340A                     882      MOVE.W      A2, D2
00000724  6100 0142                883      BSR         OUTPUT_HEX
00000728  548A                     884      ADD.L       #2, A2      *ACQUIRED FIRST PART OF LONG
0000072A                           885  
0000072A                           886  ***********
0000072A                           887      
0000072A  340A                     888      MOVE.W      A2, D2
0000072C  6100 013A                889      BSR         OUTPUT_HEX
00000730  548A                     890      ADD.L       #2, A2
00000732  4E75                     891      RTS
00000734                           892      
00000734                           893  IMME_7  *FOR NOW ONLY WORKING WITH IMMEDIATE HEX VALUES
00000734  4EB9 000008BC            894      JSR         POUND
0000073A  4EB9 0000091E            895      JSR         CASH
00000740                           896      
00000740                           897  *****
00000740  340A                     898      MOVE.W      A2, D2
00000742  6100 0124                899      BSR         OUTPUT_HEX
00000746  548A                     900      ADD.L       #2, A2
00000748                           901  ****
00000748  340A                     902      MOVE.W      A2, D2
0000074A  6100 011C                903      BSR         OUTPUT_HEX
0000074E  548A                     904      ADD.L       #2, A2
00000750  4E75                     905      RTS
00000752                           906  
00000752                           907  *-------------------------END MODE JUMP----------------------------  
00000752                           908  *-------------------------START HELPERS-----------------------------
00000752                           909  GET_SIZE
00000752  4EB9 000008C4            910      JSR         DOT
00000758  B83C 0001                911      CMP.B       #1, D4
0000075C  6700 017C                912      BEQ         BYTE
00000760  B83C 0003                913      CMP.B       #3, D4
00000764  6700 0166                914      BEQ         WORD
00000768  B83C 0002                915      CMP.B       #2, D4
0000076C  6700 017A                916      BEQ         LONG  
00000770  4E75                     917      RTS
00000772                           918      
00000772                           919  GET_REG ******************
00000772  2205                     920      MOVE.L      D5, D1 
00000774  12C1                     921      MOVE.B      D1, (A1)+
00000776  4E75                     922      RTS
00000778                           923      
00000778                           924  GET_OPMODE
00000778  4EB9 000008C4            925      JSR         DOT
0000077E  B83C 0003                926      CMP.B       #3, D4
00000782  6700 0148                927      BEQ         WORD
00000786  B83C 0007                928      CMP.B       #7, D4
0000078A  6700 015C                929      BEQ         LONG
0000078E  4E75                     930      RTS
00000790                           931      
00000790                           932  GET_OPMODE_MATH
00000790  4EB9 000008C4            933      JSR         DOT
00000796  B83C 0000                934      CMP.B       #0, D4
0000079A  6700 013E                935      BEQ         BYTE
0000079E  B83C 0004                936      CMP.B       #4, D4
000007A2  6700 0136                937      BEQ         BYTE
000007A6  B83C 0001                938      CMP.B       #1, D4
000007AA  6700 0120                939      BEQ         WORD
000007AE  B83C 0005                940      CMP.B       #5, D4
000007B2  6700 0118                941      BEQ         WORD
000007B6  B83C 0002                942      CMP.B       #2, D4
000007BA  6700 012C                943      BEQ         LONG
000007BE  B83C 0006                944      CMP.B       #6, D4
000007C2  6700 0124                945      BEQ         LONG
000007C6  4E75                     946      RTS
000007C8                           947      
000007C8                           948  GET_DATA ******************
000007C8  4EB9 000008BC            949      JSR         POUND
000007CE  BA3C 0000                950      CMP.B       #0, D5
000007D2  6700 0008                951      BEQ         PRINT_8
000007D6  2205                     952      MOVE.L      D5, D1
000007D8  16C1                     953      MOVE.B      D1, (A3)+
000007DA  4E75                     954      RTS
000007DC                           955      
000007DC                           956  PRINT_8 ********
000007DC  7208                     957      MOVE.L      #8, D1
000007DE  16C1                     958      MOVE.B      D1, (A3)+
000007E0  4E75                     959      RTS
000007E2                           960      
000007E2                           961  GET_SIZE_ADDI
000007E2  4EB9 000008C4            962      JSR         DOT
000007E8  B83C 0000                963      CMP.B       #0, D4
000007EC  6700 00EC                964      BEQ         BYTE
000007F0  B83C 0001                965      CMP.B       #1, D4
000007F4  6700 00D6                966      BEQ         WORD
000007F8  B83C 0002                967      CMP.B       #2, D4
000007FC  6700 00EA                968      BEQ         LONG  
00000800  4E75                     969      RTS
00000802                           970      
00000802                           971  TYPE_CHOOSER
00000802  B83C 0000                972      CMP.B       #0, D4      *IF IMMEDIATE
00000806  67C0                     973      BEQ         GET_DATA    *IF BRANCHED  ->  #1 IS NOW PRINTED
00000808  B83C 0001                974      CMP.B       #1, D4      *IF A DATA REG
0000080C  6700 FEB8                975      BEQ         DATA_0
00000810  4E75                     976      RTS
00000812                           977      
00000812                           978  PRINT_BCC
00000812  B83C 0004                979      CMP.B       #4, D4
00000816  6700 010E                980      BEQ         CC
0000081A  B83C 000E                981      CMP.B       #14, D4
0000081E  6700 010E                982      BEQ         GT
00000822  B83C 000F                983      CMP.B       #15, D4
00000826  6700 010E                984      BEQ         LE
0000082A  4E75                     985      RTS
0000082C                           986      
0000082C                           987  REG_SIZE
0000082C  4EB9 000008C4            988      JSR         DOT
00000832  B83C 0000                989      CMP.B       #0, D4
00000836  6700 0094                990      BEQ         WORD
0000083A  B83C 0001                991      CMP.B       #1, D4
0000083E  6700 00A8                992      BEQ         LONG
00000842  4E75                     993      RTS
00000844                           994  *-------------------------END HELPERS----------------------------
00000844                           995  *---------------------START CHANGE MODE--------------------------
00000844                           996  MODE_CHOOSER
00000844  B83C 0007                997      CMP.B       #7, D4
00000848  6700 0004                998      BEQ         NEW_MODE
0000084C  4E75                     999      RTS
0000084E                          1000      
0000084E                          1001  NEW_MODE
0000084E  BA3C 0000               1002      CMP.B       #0, D5 *CHECK REGISTER(D5), WORD ADDRESS?
00000852  6700 0010               1003      BEQ         TO_FIVE *CHANGE MODE (D4) TO 5
00000856  BA3C 0001               1004      CMP.B       #1, D5 *CHECK REGISTER(D5), LONG ADDRESS?
0000085A  6700 0004               1005      BEQ         TO_SIX *CHANGE MODE(D4) TO 6
0000085E  4E75                    1006      RTS
00000860                          1007      
00000860                          1008  TO_SIX  
00000860  5304                    1009      SUB.B      #1, D4
00000862  4E75                    1010      RTS
00000864                          1011  
00000864                          1012  TO_FIVE
00000864  5504                    1013      SUB.B      #2, D4
00000866  4E75                    1014      RTS
00000868                          1015  *---------------------------END CHANGE MODE-----------------------
00000868                          1016  *--------------------------START PRINT HEX------------------------
00000868                          1017  
00000868                          1018  OUTPUT_HEX
00000868                          1019      *OUTPUT 1ST
00000868  3E02                    1020      MOVE.W      D2, D7              *D7 = <1010 1111 0101 0111>
0000086A  E04F                    1021      LSR.W       #8, D7              *D7 = <0000 0000 1010 1111>
0000086C  E84F                    1022      LSR.W       #4, D7              *D7 = <0000 0000 0000 1010>
0000086E  1207                    1023      MOVE.B      D7, D1
Line 1024 ERROR: Undefined symbol
00000870  6100 B31C               1024      BSR         CONVERT_TO_ASCII    *convert value in D1, to ascii
00000874  6100 003C               1025      BSR         ADD_CHAR         *print the char in D1  
00000878                          1026      *OUTPUT 2ND
00000878  3E02                    1027      MOVE.W      D2, D7
0000087A  E94F                    1028      LSL.W       #4, D7              *SHIFT OUT FURTHEST RIGHT BIT
0000087C  E04F                    1029      LSR.W       #8, D7
0000087E  E84F                    1030      LSR.W       #4, D7  
00000880  1207                    1031      MOVE.B      D7, D1
Line 1032 ERROR: Undefined symbol
00000882  6100 B30A               1032      BSR         CONVERT_TO_ASCII
00000886  6100 002A               1033      BSR         ADD_CHAR
0000088A                          1034      *OUTPUT 3RD
0000088A  3E02                    1035      MOVE.W      D2, D7
0000088C  E14F                    1036      LSL.W       #8, D7
0000088E  E04F                    1037      LSR.W       #8, D7
00000890  E84F                    1038      LSR.W       #4, D7
00000892  1207                    1039      MOVE.B      D7, D1
Line 1040 ERROR: Undefined symbol
00000894  6100 B2F8               1040      BSR         CONVERT_TO_ASCII
00000898  6100 0018               1041      BSR         ADD_CHAR
0000089C                          1042      *OUTPUT 4TH
0000089C  3E02                    1043      MOVE.W      D2, D7  *D7 = <1010 1111 0101 0111>
0000089E  E14F                    1044      LSL.W       #8, D7  *     <0101 0111 0000 0000>
000008A0  E94F                    1045      LSL.W       #4, D7  *     <0111 0000 0000 0000>
000008A2  E04F                    1046      LSR.W       #8, D7  *     <
000008A4  E84F                    1047      LSR.W       #4, D7
000008A6  1207                    1048      MOVE.B      D7, D1
Line 1049 ERROR: Undefined symbol
000008A8  6100 B2E4               1049      BSR         CONVERT_TO_ASCII
000008AC  6100 0004               1050      BSR         ADD_CHAR
000008B0  4E75                    1051      RTS
000008B2                          1052                                     *continue converting            
000008B2                          1053  ADD_CHAR ********
000008B2  16C1                    1054      MOVE.B      D1, (A3)+
000008B4                          1055  
000008B4                          1056  *---------------------------END PRINT HEX------------------------
000008B4                          1057  *---------------------------START CHARACTERS---------------------------
000008B4                          1058  COMMA
000008B4  16F9 0000095A           1059      MOVE.B      M_COMMA, (A3)+
000008BA  4E75                    1060      RTS
000008BC                          1061      
000008BC                          1062  POUND
000008BC  16F9 0000095C           1063      MOVE.B      M_POUND, (A3)+
000008C2  4E75                    1064      RTS
000008C4                          1065          
000008C4                          1066  DOT
000008C4  16F9 0000095E           1067      MOVE.B      M_DOT, (A3)+
000008CA  4E75                    1068      RTS   
000008CC                          1069  
000008CC                          1070  WORD
000008CC  16F9 00000960           1071      MOVE.B      M_WORD, (A3)+
000008D2  4EB9 00000916           1072      JSR         SPACE
000008D8  4E75                    1073      RTS
000008DA                          1074  
000008DA                          1075  BYTE
000008DA  16F9 00000962           1076      MOVE.B      M_BYTE, (A3)+
000008E0  4EB9 00000916           1077      JSR         SPACE
000008E6  4E75                    1078      RTS
000008E8                          1079      
000008E8                          1080  LONG
000008E8  16F9 00000964           1081      MOVE.B      M_LONG, (A3)+
000008EE  4EB9 00000916           1082      JSR         SPACE
000008F4  4E75                    1083      RTS
000008F6                          1084      
000008F6                          1085  OPEN
000008F6  16F9 00000966           1086      MOVE.B      M_OPEN, (A3)+
000008FC  4E75                    1087      RTS
000008FE                          1088  
000008FE                          1089  CLOSE
000008FE  16F9 00000968           1090      MOVE.B      M_CLOSE, (A3)+
00000904  4E75                    1091      RTS
00000906                          1092      
00000906                          1093  PLUS
00000906  16F9 0000096A           1094      MOVE.B      M_PLUS, (A3)+
0000090C  4E75                    1095      RTS
0000090E                          1096      
0000090E                          1097  SUB
0000090E  16F9 0000096C           1098      MOVE.B      M_SUB, (A3)+
00000914  4E75                    1099      RTS
00000916                          1100      
00000916                          1101  SPACE
00000916  16F9 00000958           1102      MOVE.B      M_SPACE, (A3)+
0000091C  4E75                    1103      RTS    
0000091E                          1104      
0000091E                          1105  CASH
0000091E  16F9 00000956           1106      MOVE.B      M_CASH, (A3)+
00000924  4E75                    1107      RTS
00000926                          1108  
00000926                          1109  CC
00000926  16F9 00000972           1110      MOVE.B      M_CC, (A3)+
0000092C  4E75                    1111      RTS
0000092E                          1112  GT
0000092E  16F9 00000975           1113      MOVE.B      M_GT, (A3)+
00000934  4E75                    1114      RTS
00000936                          1115  
00000936                          1116  LE
00000936  16F9 00000978           1117      MOVE.B      M_LE, (A3)+
0000093C  4E75                    1118      RTS
0000093E                          1119      
0000093E                          1120  SLASH
0000093E  16F9 0000097B           1121      MOVE.B      M_SLASH, (A3)+
00000944  4E75                    1122      RTS
00000946                          1123      
00000946                          1124  INVALID
00000946  16BC 0000               1125      MOVE.B      #00, (A3)
Line 1126 ERROR: Undefined symbol
0000094A  6000 B242               1126      BRA         INVALID_OPCODE
0000094E                          1127      
0000094E                          1128  *----------------------------END CHARACTERS---------------------------        
0000094E                          1129  
0000094E  =0000000D               1130  CR      EQU     $0D
0000094E  =0000000A               1131  LF      EQU     $0A
0000094E                          1132  
0000094E= 49 4E 56 41 4C 49 ...   1133  M_INVAL DC.B 'INVALID',0
00000956= 24 00                   1134  M_CASH  DC.B '$',0
00000958= 20 00                   1135  M_SPACE DC.B ' ',0
0000095A= 2C 00                   1136  M_COMMA DC.B ',',0
0000095C= 23 00                   1137  M_POUND DC.B '#',0
0000095E= 2E 00                   1138  M_DOT   DC.B '.',0
00000960= 57 00                   1139  M_WORD  DC.B 'W',0
00000962= 42 00                   1140  M_BYTE  DC.B 'B',0
00000964= 4C 00                   1141  M_LONG  DC.B 'L',0
00000966= 28 00                   1142  M_OPEN  DC.B '(',0
00000968= 29 00                   1143  M_CLOSE DC.B ')',0
0000096A= 2B 00                   1144  M_PLUS  DC.B '+',0
0000096C= 2D 00                   1145  M_SUB   DC.B '-',0
0000096E= 44 00                   1146  M_DREG  DC.B 'D',0
00000970= 41 00                   1147  M_AREG  DC.B 'A',0
00000972= 43 43 00                1148  M_CC    DC.B 'CC',0
00000975= 47 54 00                1149  M_GT    DC.B 'GT',0
00000978= 4C 45 00                1150  M_LE    DC.B 'LE',0
0000097B= 2F 00                   1151  M_SLASH DC.B '/',0
0000097D                          1152  
0000097D                          1153  
0000097D                          1154  
0000097D                          1155  
0000097D                          1156  
0000097D                          1157  
0000097D                          1158  
0000097D                          1159  
0000097D                          1160  
0000097D                          1161  
0000097D                          1162  
Line 1163 WARNING: END directive missing, starting address not set

22 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSL_6              71C
ABSW_5              70C
ADDI_2              6E2
ADDI_ERROR_CHECK    630
ADDM_4              700
ADDP_3              6F4
ADDRESS_REGISTERS   5A8
ADDR_1              6D4
ADD_CHAR            8B2
ADD_ERROR_CHECK     616
BYEBYE              608
BYTE                8DA
CASH                91E
CC                  926
CHECK_TYPE          5CC
CLOSE               8FE
COMMA               8B4
COMMA_SPACE         5E0
COMMA_SPACE2        5F0
CR                  D
DATA_0              6C6
DN_VERSION          126
DONE                452
DONE_PRINTING       600
DOT                 8C4
EA2                 57C
EAP                 538
EAS                 540
EAT_INVALID         68E
EA_ADD              106
EA_ADDA             27C
EA_ADDI             1C0
EA_ADDQ             222
EA_BCC              4B4
EA_CLR              380
EA_CMP              45A
EA_JSR              4D8
EA_LEA              328
EA_LSD              3C6
EA_MOVE             0
EA_MOVEA            74
EA_MOVEM            516
EA_MOVEQ            CC
EA_MULS             2D6
EA_PRINT_ADDRESS    5BA
EA_SHIFT            41A
EA_VERSION          170
FOR_2               5AA
FOR_LOOP            586
GET_DATA            7C8
GET_OPMODE          778
GET_OPMODE_MATH     790
GET_REG             772
GET_SIZE            752
GET_SIZE_ADDI       7E2
GT                  92E
IMME_7              734
INVALID             946
JFF                 5B6
JFZ                 592
LE                  936
LEA_ERROR_CHECK     642
LF                  A
LONG                8E8
MODE_CHOOSER        844
MODE_JUMP           696
MOVEM_ERROR_CHECK   66C
MOVE_ERROR_CHECK    60C
M_AREG              970
M_BYTE              962
M_CASH              956
M_CC                972
M_CLOSE             968
M_COMMA             95A
M_DOT               95E
M_DREG              96E
M_GT                975
M_INVAL             94E
M_LE                978
M_LONG              964
M_OPEN              966
M_PLUS              96A
M_POUND             95C
M_SLASH             97B
M_SPACE             958
M_SUB               96C
M_WORD              960
NEW_MODE            84E
OPEN                8F6
OUTPUT_HEX          868
PLUS                906
POUND               8BC
PRINT_8             7DC
PRINT_BCC           812
PRINT_CURRENT       596
PRINT_LIST          574
REG_SIZE            82C
SLASH               93E
SPACE               916
SUB                 90E
TO_FIVE             864
TO_SIX              860
TYPE_CHOOSER        802
WORD                8CC
